/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Claims, ClaimsInterface } from '../Claims';

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'token0',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'token1',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.ProtocolFees',
            name: 'protocolFees',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'latestPrice',
            type: 'uint160',
          },
          {
            internalType: 'uint128',
            name: 'liquidityGlobal',
            type: 'uint128',
          },
          {
            internalType: 'uint32',
            name: 'lastTime',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'auctionStart',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'accumEpoch',
            type: 'uint32',
          },
          {
            internalType: 'int24',
            name: 'latestTick',
            type: 'int24',
          },
          {
            internalType: 'uint16',
            name: 'syncFee',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'fillFee',
            type: 'uint16',
          },
          {
            internalType: 'uint8',
            name: 'unlocked',
            type: 'uint8',
          },
        ],
        internalType: 'struct ICoverPoolStructs.GlobalState',
        name: 'state',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'lower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'upper',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'claim',
            type: 'int24',
          },
          {
            internalType: 'bool',
            name: 'zeroForOne',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdateParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'applyDeltas',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'lower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'upper',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'claim',
            type: 'int24',
          },
          {
            internalType: 'bool',
            name: 'zeroForOne',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdateParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'getDeltas',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'lower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'upper',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'claim',
            type: 'int24',
          },
          {
            internalType: 'bool',
            name: 'zeroForOne',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdateParams',
        name: 'params',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'contract ITwapSource',
            name: 'source',
            type: 'ITwapSource',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'min',
                type: 'uint160',
              },
              {
                internalType: 'uint160',
                name: 'max',
                type: 'uint160',
              },
            ],
            internalType: 'struct ITickMath.PriceBounds',
            name: 'bounds',
            type: 'tuple',
          },
          {
            internalType: 'address',
            name: 'token0',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'token1',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'inputPool',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'minAmountPerAuction',
            type: 'uint256',
          },
          {
            internalType: 'uint32',
            name: 'genesisTime',
            type: 'uint32',
          },
          {
            internalType: 'int16',
            name: 'minPositionWidth',
            type: 'int16',
          },
          {
            internalType: 'int16',
            name: 'tickSpread',
            type: 'int16',
          },
          {
            internalType: 'uint16',
            name: 'twapLength',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'auctionLength',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'blockTime',
            type: 'uint16',
          },
          {
            internalType: 'uint8',
            name: 'token0Decimals',
            type: 'uint8',
          },
          {
            internalType: 'uint8',
            name: 'token1Decimals',
            type: 'uint8',
          },
          {
            internalType: 'bool',
            name: 'minAmountLowerPriced',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.Immutables',
        name: 'constants',
        type: 'tuple',
      },
    ],
    name: 'section1',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'lower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'upper',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'claim',
            type: 'int24',
          },
          {
            internalType: 'bool',
            name: 'zeroForOne',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdateParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'section2',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'lower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'upper',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'claim',
            type: 'int24',
          },
          {
            internalType: 'bool',
            name: 'zeroForOne',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdateParams',
        name: 'params',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'price',
            type: 'uint160',
          },
          {
            internalType: 'uint128',
            name: 'liquidity',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'amountInDelta',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'amountInDeltaMaxClaimed',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'amountOutDeltaMaxClaimed',
            type: 'uint128',
          },
        ],
        internalType: 'struct ICoverPoolStructs.PoolState',
        name: 'pool',
        type: 'tuple',
      },
    ],
    name: 'section3',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'lower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'upper',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'claim',
            type: 'int24',
          },
          {
            internalType: 'bool',
            name: 'zeroForOne',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdateParams',
        name: 'params',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'price',
            type: 'uint160',
          },
          {
            internalType: 'uint128',
            name: 'liquidity',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'amountInDelta',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'amountInDeltaMaxClaimed',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'amountOutDeltaMaxClaimed',
            type: 'uint128',
          },
        ],
        internalType: 'struct ICoverPoolStructs.PoolState',
        name: 'pool',
        type: 'tuple',
      },
    ],
    name: 'section4',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'lower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'upper',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'claim',
            type: 'int24',
          },
          {
            internalType: 'bool',
            name: 'zeroForOne',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdateParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'section5',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'deltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMax',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMax',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Deltas',
            name: 'finalDeltas',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'price',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDelta',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxClaimed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxClaimed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.PoolState',
            name: 'pool',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'amountInFilledMax',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountOutUnfilledMax',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'claimTick',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint128',
                    name: 'amountInDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDelta',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountInDeltaMax',
                    type: 'uint128',
                  },
                  {
                    internalType: 'uint128',
                    name: 'amountOutDeltaMax',
                    type: 'uint128',
                  },
                ],
                internalType: 'struct ICoverPoolStructs.Deltas',
                name: 'deltas',
                type: 'tuple',
              },
              {
                internalType: 'int128',
                name: 'liquidityDelta',
                type: 'int128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxMinus',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountInDeltaMaxStashed',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOutDeltaMaxStashed',
                type: 'uint128',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Tick',
            name: 'finalTick',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'claimPriceLast',
                type: 'uint160',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountIn',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'amountOut',
                type: 'uint128',
              },
              {
                internalType: 'uint32',
                name: 'accumEpochLast',
                type: 'uint32',
              },
            ],
            internalType: 'struct ICoverPoolStructs.Position',
            name: 'position',
            type: 'tuple',
          },
          {
            internalType: 'uint160',
            name: 'priceLower',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceClaim',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceUpper',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'priceSpread',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'earlyReturn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeLower',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'removeUpper',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.UpdatePositionCache',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x613ac261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c8063a2b14db811610065578063a2b14db8146100f9578063a39c0a961461010c578063e484430e1461011f578063f0bc0d7b1461013257600080fd5b80631da89b3b1461009757806350c527ee146100c057806395272f5c146100d35780639cf95ab0146100e6575b600080fd5b6100aa6100a5366004612b4e565b610145565b6040516100b79190612da1565b60405180910390f35b6100aa6100ce366004612ee1565b6105d4565b6100aa6100e1366004612f21565b610b12565b6100aa6100f4366004612f21565b610c54565b6100aa610107366004612b4e565b610de4565b6100aa61011a366004612f21565b610f55565b6100aa61012d3660046130c5565b611158565b6100aa610140366004613105565b6113af565b61014d612433565b60008073__$5cce9e898587264528957078d7894c5934$__635d29a8788760e00151602001518760c001516101a3578861012001516001600160a01b03168960e00151600001516001600160a01b0316116101c6565b8861012001516001600160a01b03168960e00151600001516001600160a01b0316105b6101d5578861016001516101dc565b60e0890151515b875160c08a01516040516001600160e01b031960e087901b1681526102079493929190600401613187565b6040805180830381865af4158015610223573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024791906131b9565b809250819350505060006b012ced32a16a1b11e826288960261b85604001516001600160801b031686602001516001600160801b03168960e00151602001516001600160801b03166b012ced32a16a1b11e826288960261b6102a99190613209565b6102b3919061323e565b6102bd9190613209565b6102c7919061323e565b9050808760e001516040018181516102df9190613252565b6001600160801b03169052506040850180518291906102ff90839061327d565b6001600160801b031690525060208701516040018051849190610323908390613252565b6001600160801b031690525060208701516060018051839190610347908390613252565b6001600160801b0390811690915260e08901516020015160408901519082169116101590506104bc5773__$5cce9e898587264528957078d7894c5934$__635d29a87887604001518960e00151602001516103a2919061327d565b8860c001516103d2578961012001516001600160a01b03168a60e00151600001516001600160a01b0316116103f5565b8961012001516001600160a01b03168a60e00151600001516001600160a01b0316105b6104045789610160015161040b565b60e08a0151515b885160c08b01516040516001600160e01b031960e087901b1681526104369493929190600401613187565b6040805180830381865af4158015610452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047691906131b9565b606087018051929550909350849161048f908390613252565b6001600160801b03169052506080850180518391906104af908390613252565b6001600160801b03169052505b505050600083604001516001600160801b031611801561052a57508260c00151610507578361012001516001600160a01b03168460e00151600001516001600160a01b03161161052a565b8361012001516001600160a01b03168460e00151600001516001600160a01b0316105b156105ae576040516306a25f8960e51b815273__$5cce9e898587264528957078d7894c5934$__9063d44bf1209061056a908590889088906004016132a5565b60a060405180830381865af4158015610587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab919061333f565b91505b506101608301516001600160a01b031661012084015260408301819052825b9392505050565b6105dc612433565b82516040015160009081906001600160801b0316156106e3578460000151604001516001600160801b031685606001516b012ced32a16a1b11e826288960261b6106269190613209565b610630919061323e565b91506b012ced32a16a1b11e826288960261b821161064e578161065f565b6b012ced32a16a1b11e826288960261b5b8551606001519092506001600160801b0316156106e3578460000151606001516001600160801b031685608001516b012ced32a16a1b11e826288960261b6106a79190613209565b6106b1919061323e565b90506b012ced32a16a1b11e826288960261b81116106cf57806106e0565b6b012ced32a16a1b11e826288960261b5b90505b845160208601516040516345aff81360e11b815273__$5cce9e898587264528957078d7894c5934$__92638b5ff0269261072392879087906004016133e5565b61010060405180830381865af4158015610741573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107659190613472565b60208701819052818752604051634eaf0e8d60e11b815273__$5cce9e898587264528957078d7894c5934$__92639d5e1d1a926107a892879087906004016133e5565b61010060405180830381865af41580156107c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea9190613472565b602087018190529086526101008701519051600091620f4240916108129161ffff169061349f565b61081c91906134ce565b90508460c001511561084f5780876000015160200181815161083e9190613252565b6001600160801b031690525061086e565b86518051829190610861908390613252565b6001600160801b03169052505b808660200151600001818151610884919061327d565b6001600160801b031690525060208601515160e087015160400180516108ab908390613252565b6001600160801b0316905250602080870151015160e087015160600180516108d4908390613252565b6001600160801b031690525060c08501516108f35784608001516108f9565b84606001515b60020b8560a0015160020b14610a815760c08601516020870151604051635369551960e01b815273__$5cce9e898587264528957078d7894c5934$__92635369551992610948926004016134f4565b61012060405180830381865af4158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a9190613595565b8660c001819052508460c001516109a55784606001516109ab565b84608001515b60020b8560a0015160020b03610a4557855160a08701516040516304feecb760e01b815273__$5cce9e898587264528957078d7894c5934$__926304feecb7926109f7926004016135b2565b6101a060405180830381865af4158015610a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3991906135ce565b60a08801528652610b07565b855160a087015160405163db51a5d760e01b815273__$5cce9e898587264528957078d7894c5934$__9263db51a5d7926109f7926004016135b2565b855160a08701516040516304feecb760e01b815273__$5cce9e898587264528957078d7894c5934$__926304feecb792610abd926004016135b2565b6101a060405180830381865af4158015610adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aff91906135ce565b60a088015286525b509395945050505050565b610b1a612433565b8160c00151610b4a578260e00151600001516001600160a01b03168361012001516001600160a01b031611610b6d565b8260e00151600001516001600160a01b03168361012001516001600160a01b0316105b15610c4b5760e08301516020810151905161012085015160c085015160405163d92f9a6760e01b8152600094859473__$5cce9e898587264528957078d7894c5934$__9463d92f9a6794610bc394600401613187565b6040805180830381865af4158015610bdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0391906131b9565b6060870180519294509092506001600160801b03841691610c259083906135fb565b9052506080850180516001600160801b0383169190610c459083906135fb565b90525050505b50815b92915050565b610c5c612433565b60008260c00151610c7257836101400151610c79565b8361010001515b9050600083604001516001600160801b0316118015610caf5750806001600160a01b03168461012001516001600160a01b031614155b15610ddc5760408084015161012086015160c0860151925163d6261edb60e01b8152600093849373__$5cce9e898587264528957078d7894c5934$__9363d6261edb93610d00938991600401613187565b6040805180830381865af4158015610d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4091906131b9565b60e088015160600180519294509092508291610d5d908390613252565b6001600160801b031690525060c0850151610d7c578460800151610d82565b84606001515b60020b8560a0015160020b14610dd957818660200151604001818151610da89190613252565b6001600160801b031690525060208601516060018051829190610dcc908390613252565b6001600160801b03169052505b50505b509192915050565b610dec612433565b60408301516001600160801b031615610ddc5760008360c00151610e4457610e3f84604001516001600160801b03168661012001516001600160a01b031685600001516001600160a01b03166000611cec565b610e79565b610e7984604001516001600160801b031684600001516001600160a01b03168761012001516001600160a01b03166000611d05565b905060008460c00151610ec057610ebb85604001516001600160801b03168761012001516001600160a01b031686600001516001600160a01b03166000611d05565b610ef5565b610ef585604001516001600160801b031685600001516001600160a01b03168861012001516001600160a01b03166000611cec565b9050818660e00151606001818151610f0d9190613252565b6001600160801b031690525060208601516040018051829190610f31908390613252565b6001600160801b031690525060208601516060018051839190610dcc908390613252565b610f5d612433565b8160c00151610f70578160800151610f76565b81606001515b60020b8260a0015160020b036110105760a08301518351604051633d607ee760e01b815273__$5cce9e898587264528957078d7894c5934$__92633d607ee792610fc2926004016134f4565b6101a060405180830381865af4158015610fe0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110049190613613565b845260a0840152610c4b565b60e0830151516000906001600160a01b031615801561105157508260c0015161103d578260600151611043565b82608001515b60020b8360a0015160020b14155b806110c357508260c001516110a0578361012001516001600160a01b03168460e00151600001516001600160a01b031610801561109b575060e0840151516001600160a01b031615155b6110c3565b8361012001516001600160a01b03168460e00151600001516001600160a01b0316115b90508015610ddc5760a08401518451604051639c2f07e160e01b815273__$5cce9e898587264528957078d7894c5934$__92639c2f07e192611107926004016134f4565b6101a060405180830381865af4158015611125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111499190613613565b855260a0850152509192915050565b611160612433565b60e0840151516001600160a01b03166000036111a8578260c0015161118a57836101000151611191565b8361014001515b60e08501516001600160a01b039091169052610ddc565b8260c00151611203578361010001516001600160a01b03168460e00151600001516001600160a01b0316141580156111fe57508361012001516001600160a01b03168460e00151600001516001600160a01b0316105b611250565b8361014001516001600160a01b03168460e00151600001516001600160a01b03161415801561125057508361012001516001600160a01b03168460e00151600001516001600160a01b0316115b15610ddc5760008073__$5cce9e898587264528957078d7894c5934$__635d29a8788760e00151602001518860e00151600001518860c001516112985789610100015161129f565b8961014001515b8960c001516040518563ffffffff1660e01b81526004016112c39493929190613187565b6040805180830381865af41580156112df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130391906131b9565b6060880180519294509092506001600160801b038416916113259083906135fb565b9052506080860180516001600160801b03831691906113459083906135fb565b905250505060c08301516113795761137482610100015160010b846060015161136e9190613641565b83611d13565b611394565b61139482610100015160010b846080015161136e9190613688565b60e08501516001600160a01b03909116905250829392505050565b6113b7612433565b8260e00151602001516001600160801b031684604001516001600160801b0316111561142a5760405162461bcd60e51b815260206004820152601c60248201527f4e6f74456e6f756768506f736974696f6e4c697175696469747928290000000060448201526064015b60405180910390fd5b8260e00151602001516001600160801b03166000036114525750600161018083015281611ce1565b8360c0015161151057836060015160020b8460a0015160020b14801561150b57508260e001516080015163ffffffff1673__$e745a24e8b24073a582ae013b131be8621$__6311b5819b86606001518a866040518463ffffffff1660e01b81526004016114c1939291906136d0565b602060405180830381865af41580156114de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115029190613829565b63ffffffff1611155b6115c0565b836080015160020b8460a0015160020b1480156115c057508260e001516080015163ffffffff1673__$e745a24e8b24073a582ae013b131be8621$__6311b5819b86608001518a866040518463ffffffff1660e01b8152600401611576939291906136d0565b602060405180830381865af4158015611593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b79190613829565b63ffffffff1611155b156115d45750600161018083015281611ce1565b8360c0015161161a57836060015160020b8460a0015160020b148015611615575084600001516001600160a01b03168361010001516001600160a01b031614155b611652565b836080015160020b8460a0015160020b148015611652575084600001516001600160a01b03168361014001516001600160a01b031614155b801561166b57508560c0015160020b8460a0015160020b145b156116b65760408401516001600160801b031615801561169d5750845160e0840151516001600160a01b039081169116145b156116b15750600161018083015281611ce1565b61177d565b60e0830151516001600160a01b03161580159061172157508360c001516116fe578261012001516001600160a01b03168360e00151600001516001600160a01b031611611721565b8261012001516001600160a01b03168360e00151600001516001600160a01b0316105b801561173b57508560c0015160020b8460a0015160020b14155b1561177d5760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964436c61696d5469636b282960701b6044820152606401611421565b836060015160020b8460a0015160020b12806117a65750836080015160020b8460a0015160020b135b156117e85760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964436c61696d5469636b282960701b6044820152606401611421565b60a08401516040516311b5819b60e01b815260009173__$e745a24e8b24073a582ae013b131be8621$__916311b5819b91611829918c9088906004016136d0565b602060405180830381865af4158015611846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186a9190613829565b90508460c0015161187f578460800151611885565b84606001515b60020b8560a0015160020b036118cd578360e001516080015163ffffffff168163ffffffff16116118c85760405162461bcd60e51b815260040161142190613846565b611b0b565b60008560c001516119d85773__$e745a24e8b24073a582ae013b131be8621$__6311b5819b73__$4152b7ff06ffc80286808c1ade3be88148$__63b5ebd1de8960a001518d896040518463ffffffff1660e01b8152600401611931939291906136d0565b602060405180830381865af415801561194e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119729190613874565b8b876040518463ffffffff1660e01b8152600401611992939291906136d0565b602060405180830381865af41580156119af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d39190613829565b611ad3565b73__$e745a24e8b24073a582ae013b131be8621$__6311b5819b73__$4152b7ff06ffc80286808c1ade3be88148$__631f4be9fd8960a001518d896040518463ffffffff1660e01b8152600401611a31939291906136d0565b602060405180830381865af4158015611a4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a729190613874565b8b876040518463ffffffff1660e01b8152600401611a92939291906136d0565b602060405180830381865af4158015611aaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad39190613829565b90508460e001516080015163ffffffff168163ffffffff161115611b095760405162461bcd60e51b815260040161142190613846565b505b846080015160020b8560a0015160020b14158015611b375750846060015160020b8560a0015160020b14155b15611cdc578360e001516080015163ffffffff168163ffffffff1611611b6f5760405162461bcd60e51b815260040161142190613846565b8460c0015115611c2d5784516001600160a01b0316600090815260208a815260408083206060890151600290810b855290835281842060a08a015190910b84529091529020600101546001600160801b031615611c28576000611bd8866060015160020b61206e565b611be88760a0015160020b61206e565b604051602001611bf99291906138c1565b60405160208183030381529060405290611c265760405162461bcd60e51b8152600401611421919061392e565b505b611cdc565b84516001600160a01b0316600090815260208a8152604080832060a0890151600290810b855290835281842060808a015190910b84529091529020600101546001600160801b031615611cdc576000611c8c8660a0015160020b61206e565b611c9c876080015160020b61206e565b604051602001611cad9291906138c1565b60405160208183030381529060405290611cda5760405162461bcd60e51b8152600401611421919061392e565b505b839150505b979650505050505050565b6000611cfa858585856120e0565b90505b949350505050565b6000611cfa85858585612111565b60008060008460020b12611d2a578360020b611d37565b8360020b611d3790613961565b9050611d47836101000151612162565b62ffffff16811115611d8f5760405162461bcd60e51b81526020600482015260116024820152705469636b4f75744f66426f756e6473282960781b6044820152606401611421565b600081600116600003611da657600160801b611db8565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611dec576ffff97272373d413259a46990580e213a0260801c5b6004821615611e0b576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611e2a576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615611e49576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615611e68576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615611e87576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611ea6576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611ec6576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611ee6576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615611f06576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615611f26576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615611f46576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615611f66576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615611f86576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611fa6576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611fc7576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611fe7576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615612006576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612023576b048a170391f7dc42444e8fa20260801c5b60008560020b131561204457806000198161204057612040613228565b0490505b64010000000081061561205857600161205b565b60005b60ff16602082901c019250505092915050565b60606000821261208d57604051806020016040528060008152506120a8565b604051806040016040528060018152602001602d60f81b8152505b6120b96120b48461218b565b6121a2565b6040516020016120ca92919061397d565b6040516020818303038152906040529050919050565b60008115612100576120f985858503600160601b612235565b9050611cfd565b611cfa85858503600160601b6122a9565b60008115612139576120f961212d606087901b86860386612235565b85808204910615150190565b8361214b606087901b868603866122a9565b8161215857612158613228565b0495945050505050565b6000600182900b80612177620d89e7196139a3565b61218191906139c5565b610c4e91906139ff565b60008082121561219e5781600003610c4e565b5090565b606060006121af8361235b565b600101905060008167ffffffffffffffff8111156121cf576121cf612599565b6040519080825280601f01601f1916602001820160405280156121f9576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461220357509392505050565b60006122428484846122a9565b9050818061225257612252613228565b838509156105cd57600019811061229f5760405162461bcd60e51b81526020600482015260116024820152704d617855696e744578636565646564282960781b6044820152606401611421565b6001019392505050565b60008080600019858709858702925082811083820303915050806000036122e257600084116122d757600080fd5b5082900490506105cd565b8084116122ee57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061239a5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106123c6576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106123e457662386f26fc10000830492506010015b6305f5e10083106123fc576305f5e100830492506008015b612710831061241057612710830492506004015b60648310612422576064830492506002015b600a8310610c4e5760010192915050565b60408051610260810190915260006101e0820181815261020083018290526102208301829052610240830191909152819081526040805160808101825260008082526020828101829052928201819052606082015291019081526040805160a08101825260008082526020828101829052928201819052606082018190526080820152910190815260200160008152602001600081526020016124d4612546565b81526020016124e1612546565b81526040805160a08101825260008082526020828101829052928201819052606082018190526080820152910190815260006020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e09091015290565b6040805161014081018252600060c0820181815260e0830182905261010083018290526101208301829052825260208201819052918101829052606081018290526080810182905260a081019190915290565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156125e057634e487b7160e01b600052604160045260246000fd5b60405290565b60405160a0810167ffffffffffffffff811182821017156125e057634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156125e057634e487b7160e01b600052604160045260246000fd5b6040516101e0810167ffffffffffffffff811182821017156125e057634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156125e057634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156125e057634e487b7160e01b600052604160045260246000fd5b6001600160801b03811681146126f257600080fd5b50565b8035612700816126dd565b919050565b60006080828403121561271757600080fd5b61271f6125af565b9050813561272c816126dd565b8152602082013561273c816126dd565b6020820152604082013561274f816126dd565b60408201526060820135612762816126dd565b606082015292915050565b6001600160a01b03811681146126f257600080fd5b80356127008161276d565b600060a0828403121561279f57600080fd5b6127a76125e6565b905081356127b48161276d565b815260208201356127c4816126dd565b602082015260408201356127d7816126dd565b604082015260608201356127ea816126dd565b606082015260808201356127fd816126dd565b608082015292915050565b80600f0b81146126f257600080fd5b6000610120828403121561282a57600080fd5b612832612617565b905061283e8383612705565b8152608082013561284e81612808565b602082015260a0820135612861816126dd565b604082015260c0820135612874816126dd565b606082015260e0820135612887816126dd565b608082015261010082013561289b816126dd565b60a082015292915050565b63ffffffff811681146126f257600080fd5b8035612700816128a6565b600060a082840312156128d557600080fd5b6128dd6125e6565b905081356128ea8161276d565b815260208201356128fa816126dd565b6020820152604082013561290d816126dd565b60408201526060820135612920816126dd565b606082015260808201356127fd816128a6565b8035801515811461270057600080fd5b60006105a0828403121561295657600080fd5b61295e612648565b905061296a8383612705565b81526129798360808401612705565b602082015261010061298d8482850161278d565b60408301526101a08084013560608401526101c08085013560808501526129b8866101e08701612817565b60a08501526129cb866103008701612817565b60c08501526129de8661042087016128c3565b60e08501526129f06104c08601612782565b83850152612a016104e08601612782565b610120850152612a146105008601612782565b610140850152612a276105208601612782565b610160850152612a3a6105408601612933565b610180850152612a4d6105608601612933565b82850152612a5e6105808601612933565b8185015250505092915050565b8060020b81146126f257600080fd5b803561270081612a6b565b600060e08284031215612a9757600080fd5b60405160e0810181811067ffffffffffffffff82111715612ac857634e487b7160e01b600052604160045260246000fd5b6040529050808235612ad98161276d565b81526020830135612ae98161276d565b60208201526040830135612afc816126dd565b60408201526060830135612b0f81612a6b565b6060820152612b2060808401612a7a565b6080820152612b3160a08401612a7a565b60a0820152612b4260c08401612933565b60c08201525092915050565b60008060006107208486031215612b6457600080fd5b612b6e8585612943565b9250612b7e856105a08601612a85565b9150612b8e85610680860161278d565b90509250925092565b80516001600160801b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b80516001600160a01b031682526020808201516001600160801b039081169184019190915260408083015182169084015260608083015182169084015260809182015116910152565b612c1e828251612b97565b6020810151600f0b608083015260408101516001600160801b0380821660a08501528060608401511660c08501528060808401511660e08501528060a08401511661010085015250505050565b612c76828251612b97565b6020810151612c886080840182612b97565b506040810151610100612c9d81850183612bca565b606083015191506101a08281860152608084015192506101c0838187015260a08501519350612cd06101e0870185612c13565b60c08501519350612ce5610300870185612c13565b60e085015180516001600160a01b0390811661042089015260208201516001600160801b039081166104408a0152604083015181166104608a015260608301511661048089015260809091015163ffffffff166104a08801529285015183166104c087015261012085015183166104e08701526101408501518316610500870152610160850151909216610520860152610180840151151561054086015283015115156105608501528201518015156105808501529050505050565b6105a08101610c4e8284612c6b565b600060408284031215612dc257600080fd5b612dca61267a565b90508135612dd7816126dd565b81526020820135612de7816126dd565b602082015292915050565b803561ffff8116811461270057600080fd5b803560ff8116811461270057600080fd5b60006101608284031215612e2857600080fd5b612e306126ab565b9050612e3c8383612db0565b8152612e4a60408301612782565b6020820152612e5b606083016126f5565b6040820152612e6c608083016128b8565b6060820152612e7d60a083016128b8565b6080820152612e8e60c083016128b8565b60a0820152612e9f60e08301612a7a565b60c0820152610100612eb2818401612df2565b60e0830152610120612ec5818501612df2565b82840152612ed66101408501612e04565b908301525092915050565b60008060006107e08486031215612ef757600080fd5b612f018585612e15565b9250612f11856101608601612943565b9150612b8e856107008601612a85565b6000806106808385031215612f3557600080fd5b612f3f8484612943565b9150612f4f846105a08501612a85565b90509250929050565b600060408284031215612f6a57600080fd5b612f7261267a565b90508135612f7f8161276d565b81526020820135612de78161276d565b8035600181900b811461270057600080fd5b60006102008284031215612fb457600080fd5b612fbc612648565b9050612fc782612782565b8152612fd68360208401612f58565b6020820152612fe760608301612782565b6040820152612ff860808301612782565b606082015261300960a08301612782565b608082015260c082013560a082015261302460e083016128b8565b60c0820152610100613037818401612f8f565b60e083015261012061304a818501612f8f565b82840152610140915061305e828501612df2565b90830152610160613070848201612df2565b828401526101809150613084828501612df2565b908301526101a0613096848201612e04565b828401526101c091506130aa828501612e04565b908301526130bb6101e08401612933565b9082015292915050565b600080600061088084860312156130db57600080fd5b6130e58585612943565b92506130f5856105a08601612a85565b9150612b8e856106808601612fa1565b6000806000806000806000610ac0888a03121561312157600080fd5b87359650602088013595506131398960408a01612e15565b9450613149896101a08a0161278d565b9350613159896102408a01612a85565b9250613169896103208a01612943565b9150613179896108c08a01612fa1565b905092959891949750929550565b6001600160801b039490941684526001600160a01b039283166020850152911660408301521515606082015260800190565b600080604083850312156131cc57600080fd5b82516131d7816126dd565b60208401519092506131e8816126dd565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613223576132236131f3565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261324d5761324d613228565b500490565b60006001600160801b03808316818516808303821115613274576132746131f3565b01949350505050565b60006001600160801b038381169083168181101561329d5761329d6131f3565b039392505050565b61072081016132b48286612bca565b6132c160a0830185612c6b565b82516001600160a01b0390811661064084015260208401511661066083015260408301516001600160801b03166106808301526060830151600290810b6106a08401526080840151900b6106c083015260a08301516133266106e084018260020b9052565b5060c08301518015156107008401525b50949350505050565b600060a0828403121561335157600080fd5b60405160a0810181811067ffffffffffffffff8211171561338257634e487b7160e01b600052604160045260246000fd5b60405282516133908161276d565b815260208301516133a0816126dd565b602082015260408301516133b3816126dd565b604082015260608301516133c6816126dd565b606082015260808301516133d9816126dd565b60808201529392505050565b61014081016133f48287612b97565b6134016080830186612b97565b610100820193909352610120015292915050565b60006080828403121561342757600080fd5b61342f6125af565b9050815161343c816126dd565b8152602082015161344c816126dd565b6020820152604082015161345f816126dd565b60408201526060820151612762816126dd565b600080610100838503121561348657600080fd5b6134908484613415565b9150612f4f8460808501613415565b60006001600160801b03808316818516818304811182151516156134c5576134c56131f3565b02949350505050565b60006001600160801b03808416806134e8576134e8613228565b92169190910492915050565b6101a081016135038285612c13565b6105cd610120830184612b97565b6000610120828403121561352457600080fd5b61352c612617565b90506135388383613415565b8152608082015161354881612808565b602082015260a082015161355b816126dd565b604082015260c082015161356e816126dd565b606082015260e0820151613581816126dd565b608082015261010082015161289b816126dd565b600061012082840312156135a857600080fd5b6105cd8383613511565b6101a081016135c18285612b97565b6105cd6080830184612c13565b6000806101a083850312156135e257600080fd5b6135ec8484613415565b9150612f4f8460808501613511565b6000821982111561360e5761360e6131f3565b500190565b6000806101a0838503121561362757600080fd5b6136318484613511565b9150612f4f846101208501613415565b60008160020b8360020b6000821282627fffff03821381151615613667576136676131f3565b82627fffff1903821281161561367f5761367f6131f3565b50019392505050565b60008160020b8360020b6000811281627fffff19018312811516156136af576136af6131f3565b81627fffff0183138116156136c6576136c66131f3565b5090039392505050565b600284900b81526020810183905281516001600160a01b031660408201526102408101602083015161371b606084018280516001600160a01b03908116835260209182015116910152565b5060408301516001600160a01b03811660a08401525060608301516001600160a01b03811660c08401525060808301516001600160a01b03811660e08401525060a0830151610100818185015260c085015191506101206137838186018463ffffffff169052565b60e0860151925061014061379b8187018560010b9052565b918601519250610160916137b38684018560010b9052565b908601519250610180906137cc8683018561ffff169052565b86015192506101a06137e38682018561ffff169052565b9186015192506101c0916137fc8684018561ffff169052565b9086015160ff9081166101e087015290860151166102008501528401518015156102208501529050613336565b60006020828403121561383b57600080fd5b81516105cd816128a6565b60208082526014908201527357726f6e675469636b436c61696d65644174282960601b604082015260600190565b60006020828403121561388657600080fd5b81516105cd81612a6b565b60005b838110156138ac578181015183820152602001613894565b838111156138bb576000848401525b50505050565b750aae0c8c2e8caa0dee6d2e8d2dedc8cd2e4e6e882e8560531b8152600083516138f2816016850160208801613891565b61016160f51b6016918401918201528351613914816018840160208801613891565b602960f81b60189290910191820152601901949350505050565b602081526000825180602084015261394d816040850160208701613891565b601f01601f19169190910160400192915050565b6000600160ff1b8201613976576139766131f3565b5060000390565b6000835161398f818460208801613891565b835190830190613274818360208801613891565b60008160020b627fffff1981036139bc576139bc6131f3565b60000392915050565b60008160020b8360020b806139dc576139dc613228565b627fffff198214600019821416156139f6576139f66131f3565b90059392505050565b60008160020b8360020b627fffff600082136000841383830485118282161615613a2b57613a2b6131f3565b627fffff196000851282811687830587121615613a4a57613a4a6131f3565b60008712925085820587128484161615613a6657613a666131f3565b85850587128184161615613a7c57613a7c6131f3565b505050929091029594505050505056fea26469706673582212208b8407c239908413505a7a22f7ab7339e2f2de1d06c059753d8ff9df7738e6dc64736f6c634300080d0033';

type ClaimsConstructorParams =
  | [linkLibraryAddresses: ClaimsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimsConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class Claims__factory extends ContractFactory {
  constructor(...args: ClaimsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Claims__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: ClaimsLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$5cce9e898587264528957078d7894c5934\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Deltas.sol:Deltas']
        .replace(/^0x/, '')
        .toLowerCase(),
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$e745a24e8b24073a582ae013b131be8621\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/EpochMap.sol:EpochMap']
        .replace(/^0x/, '')
        .toLowerCase(),
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$4152b7ff06ffc80286808c1ade3be88148\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/TickMap.sol:TickMap']
        .replace(/^0x/, '')
        .toLowerCase(),
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<Claims> {
    return super.deploy(overrides || {}) as Promise<Claims>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Claims {
    return super.attach(address) as Claims;
  }
  connect(signer: Signer): Claims__factory {
    return super.connect(signer) as Claims__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimsInterface {
    return new utils.Interface(_abi) as ClaimsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Claims {
    return new Contract(address, _abi, signerOrProvider) as Claims;
  }
}

export interface ClaimsLibraryAddresses {
  ['contracts/libraries/Deltas.sol:Deltas']: string;
  ['contracts/libraries/EpochMap.sol:EpochMap']: string;
  ['contracts/libraries/TickMap.sol:TickMap']: string;
}
