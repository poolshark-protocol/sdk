/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  CoverPoolManager,
  CoverPoolManagerInterface,
} from '../CoverPoolManager';

const _abi = [
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'sourceName',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'curveAddress',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousFactory',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newFactory',
        type: 'address',
      },
    ],
    name: 'FactoryChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousFeeTo',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newFeeTo',
        type: 'address',
      },
    ],
    name: 'FeeToTransfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnerTransfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address[]',
        name: 'collectPools',
        type: 'address[]',
      },
      {
        indexed: false,
        internalType: 'uint128[]',
        name: 'token0Fees',
        type: 'uint128[]',
      },
      {
        indexed: false,
        internalType: 'uint128[]',
        name: 'token1Fees',
        type: 'uint128[]',
      },
    ],
    name: 'ProtocolFeesCollected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address[]',
        name: 'modifyPools',
        type: 'address[]',
      },
      {
        indexed: false,
        internalType: 'uint16[]',
        name: 'syncFees',
        type: 'uint16[]',
      },
      {
        indexed: false,
        internalType: 'uint16[]',
        name: 'fillFees',
        type: 'uint16[]',
      },
      {
        indexed: false,
        internalType: 'bool[]',
        name: 'setFees',
        type: 'bool[]',
      },
      {
        indexed: false,
        internalType: 'uint128[]',
        name: 'token0Fees',
        type: 'uint128[]',
      },
      {
        indexed: false,
        internalType: 'uint128[]',
        name: 'token1Fees',
        type: 'uint128[]',
      },
    ],
    name: 'ProtocolFeesModified',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'sourceName',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'curveAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'factoryAddress',
        type: 'address',
      },
    ],
    name: 'TwapSourceEnabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'curveAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'feeTier',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'int16',
        name: 'tickSpread',
        type: 'int16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'twapLength',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'minAmountPerAuction',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'auctionLength',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'blockTime',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'syncFee',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'fillFee',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'int16',
        name: 'minPositionWidth',
        type: 'int16',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'minLowerPriced',
        type: 'bool',
      },
    ],
    name: 'VolatilityTierEnabled',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MAX_PROTOCOL_FEE',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'collectPools',
        type: 'address[]',
      },
    ],
    name: 'collectProtocolFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'sourceName',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'curveAddress',
        type: 'address',
      },
    ],
    name: 'enableTwapSource',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'sourceName',
        type: 'bytes32',
      },
      {
        internalType: 'uint16',
        name: 'feeTier',
        type: 'uint16',
      },
      {
        internalType: 'int16',
        name: 'tickSpread',
        type: 'int16',
      },
      {
        internalType: 'uint16',
        name: 'twapLength',
        type: 'uint16',
      },
      {
        internalType: 'uint128',
        name: 'minAmountPerAuction',
        type: 'uint128',
      },
      {
        internalType: 'uint16',
        name: 'auctionLength',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: 'blockTime',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: 'syncFee',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: 'fillFee',
        type: 'uint16',
      },
      {
        internalType: 'int16',
        name: 'minPositionWidth',
        type: 'int16',
      },
      {
        internalType: 'bool',
        name: 'minLowerPriced',
        type: 'bool',
      },
    ],
    name: 'enableVolatilityTier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeTo',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'modifyPools',
        type: 'address[]',
      },
      {
        internalType: 'uint16[]',
        name: 'syncFees',
        type: 'uint16[]',
      },
      {
        internalType: 'uint16[]',
        name: 'fillFees',
        type: 'uint16[]',
      },
      {
        internalType: 'bool[]',
        name: 'setFees',
        type: 'bool[]',
      },
    ],
    name: 'modifyProtocolFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'sourceName',
        type: 'bytes32',
      },
      {
        internalType: 'uint16',
        name: 'feeTier',
        type: 'uint16',
      },
      {
        internalType: 'int16',
        name: 'tickSpread',
        type: 'int16',
      },
      {
        internalType: 'uint16',
        name: 'twapLength',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: 'syncFee',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: 'fillFee',
        type: 'uint16',
      },
    ],
    name: 'modifyVolatilityTierFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'oneSecond',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'factory_',
        type: 'address',
      },
    ],
    name: 'setFactory',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newFeeTo',
        type: 'address',
      },
    ],
    name: 'transferFeeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'sourceName',
        type: 'bytes32',
      },
    ],
    name: 'twapSources',
    outputs: [
      {
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'curveAddress',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'sourceName',
        type: 'bytes32',
      },
      {
        internalType: 'uint16',
        name: 'feeTier',
        type: 'uint16',
      },
      {
        internalType: 'int16',
        name: 'tickSpread',
        type: 'int16',
      },
      {
        internalType: 'uint16',
        name: 'twapLength',
        type: 'uint16',
      },
    ],
    name: 'volatilityTiers',
    outputs: [
      {
        components: [
          {
            internalType: 'uint128',
            name: 'minAmountPerAuction',
            type: 'uint128',
          },
          {
            internalType: 'uint16',
            name: 'auctionLength',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'blockTime',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'syncFee',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'fillFee',
            type: 'uint16',
          },
          {
            internalType: 'int16',
            name: 'minPositionWidth',
            type: 'int16',
          },
          {
            internalType: 'bool',
            name: 'minAmountLowerPriced',
            type: 'bool',
          },
        ],
        internalType: 'struct CoverPoolManagerStructs.VolatilityTier',
        name: 'config',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162002489380380620024898339810160408190526200003491620005a2565b60008054336001600160a01b0319918216811783556001805490921681179091556040519091907f5327f96e1b66776c2f90adb141c8f65efa8dd259adb405009213276527cbf69a908290a36040518060e0016040528060006001600160801b03168152602001600561ffff1681526020016103e861ffff168152602001600061ffff168152602001600061ffff1681526020016001800b8152602001600115158152506005600085815260200190815260200160002060006101f461ffff1681526020019081526020016000206000601460010b81526020019081526020016000206000600561ffff16815260200190815260200160002060008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a81548161ffff021916908361ffff16021790555060408201518160000160126101000a81548161ffff021916908361ffff16021790555060608201518160000160146101000a81548161ffff021916908361ffff16021790555060808201518160000160166101000a81548161ffff021916908361ffff16021790555060a08201518160000160186101000a81548161ffff021916908360010b61ffff16021790555060c082015181600001601a6101000a81548160ff0219169083151502179055509050506040518060e0016040528060006001600160801b03168152602001600a61ffff1681526020016103e861ffff1681526020016101f461ffff16815260200161138861ffff168152602001600560010b8152602001600015158152506005600085815260200190815260200160002060006101f461ffff1681526020019081526020016000206000602860010b81526020019081526020016000206000600a61ffff16815260200190815260200160002060008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a81548161ffff021916908361ffff16021790555060408201518160000160126101000a81548161ffff021916908361ffff16021790555060608201518160000160146101000a81548161ffff021916908361ffff16021790555060808201518160000160166101000a81548161ffff021916908361ffff16021790555060a08201518160000160186101000a81548161ffff021916908360010b61ffff16021790555060c082015181600001601a6101000a81548160ff0219169083151502179055509050506000805160206200246983398151915282826101f460146005670de0b6b3a764000060056103e8600080600180604051620004289c9b9a99989796959493929190620005e3565b60405180910390a16000805160206200246983398151915282826101f46028600a670de0b6b3a7640000600a6103e86101f4611388600560006040516200047b9c9b9a99989796959493929190620005e3565b60405180910390a1600083815260046020818152604080842080546001600160a01b03199081166001600160a01b0389811691821790935560038552958390208054909116918716919091179055805163c45a015560e01b815290517fafdbe5855c227c7df37abd1adbf1c55a6246e1c19d16aae676c1b3716da177a894889488948894929363c45a01559380840193908290030181865afa15801562000526573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200054c91906200067a565b604080519485526001600160a01b039384166020860152918316848301529091166060830152519081900360800190a15050506200069f565b80516001600160a01b03811681146200059d57600080fd5b919050565b600080600060608486031215620005b857600080fd5b83519250620005ca6020850162000585565b9150620005da6040850162000585565b90509250925092565b6001600160a01b038d811682528c16602082015261ffff8b8116604083015260018b900b606083015289811660808301526001600160801b03891660a0830152871660c0820152610180810161ffff871660e083015261ffff861661010083015261ffff85166101208301526200066061014083018560010b9052565b8215156101608301529d9c50505050505050505050505050565b6000602082840312156200068d57600080fd5b620006988262000585565b9392505050565b611dba80620006af6000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80635ac49e9c116100975780639c240a74116100665780639c240a741461038c578063b8ca3b831461039f578063c45a0155146103a8578063db104572146103bb57600080fd5b80635ac49e9c146101a65780635bb478081461020057806375e3c8db146102135780638da5cb5b1461037957600080fd5b806321fcf741116100d357806321fcf7411461015a578063377658841461016d5780634ad1677c146101805780634fb2e45d1461019357600080fd5b8062aa45a5146100f9578063017e7e581461010e57806321ed4b271461013e575b600080fd5b61010c61010736600461157a565b6103ce565b005b600154610121906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101476103e881565b60405161ffff9091168152602001610135565b61010c6101683660046115bc565b6105ed565b61010c61017b366004611695565b61099d565b61010c61018e3660046116e2565b610a07565b61010c6101a1366004611695565b610ab3565b6101e06101b436600461174f565b6000908152600460209081526040808320546003909252909120546001600160a01b0391821692911690565b604080516001600160a01b03938416815292909116602083015201610135565b61010c61020e366004611695565b610b1a565b610307610221366004611768565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915250600093845260056020908152604080862061ffff95861687528252808620600194850b87528252808620928516865291815293819020815160e08101835290546001600160801b0381168252600160801b8104851695820195909552600160901b8504841691810191909152600160a01b840483166060820152600160b01b84049092166080830152600160c01b8304900b60a0820152600160d01b90910460ff16151560c082015290565b6040516101359190600060e0820190506001600160801b038351168252602083015161ffff8082166020850152806040860151166040850152806060860151166060850152806080860151166080850152505060a083015160010b60a083015260c0830151151560c083015292915050565b600054610121906001600160a01b031681565b61010c61039a3660046117da565b610bcd565b61014761271081565b600254610121906001600160a01b031681565b61010c6103c93660046118a1565b61118f565b60008190036104185760405162461bcd60e51b8152602060048201526011602482015270456d707479506f6f6c734172726179282960781b60448201526064015b60405180910390fd5b60008167ffffffffffffffff811115610433576104336118e3565b60405190808252806020026020018201604052801561045c578160200160208202803683370190505b50905060008267ffffffffffffffff81111561047a5761047a6118e3565b6040519080825280602002602001820160405280156104a3578160200160208202803683370190505b50905060005b838110156105a9578484828181106104c3576104c36118f9565b90506020020160208101906104d89190611695565b604051635476610960e11b81526000600482018190526024820181905260448201526001600160a01b03919091169063a8ecc2129060640160408051808303816000875af115801561052e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610552919061190f565b848381518110610564576105646118f9565b6020026020010184848151811061057d5761057d6118f9565b6001600160801b03938416602091820292909201015291169052806105a18161195f565b9150506104a9565b507fb8451c39a0f69d372c1a4bb8ef4a637ed1dd8a40c60f55d22a4bbe6d298ececc848484846040516105df94939291906119fa565b60405180910390a150505050565b6105f56113fa565b600087900361063a5760405162461bcd60e51b8152602060048201526011602482015270456d707479506f6f6c734172726179282960781b604482015260640161040f565b86851415806106495750848314155b806106545750828114155b156106a15760405162461bcd60e51b815260206004820152601860248201527f4d69736d61746368656441727261794c656e6774687328290000000000000000604482015260640161040f565b60008767ffffffffffffffff8111156106bc576106bc6118e3565b6040519080825280602002602001820160405280156106e5578160200160208202803683370190505b50905060008867ffffffffffffffff811115610703576107036118e3565b60405190808252806020026020018201604052801561072c578160200160208202803683370190505b50905060005b898110156109475761271089898381811061074f5761074f6118f9565b90506020020160208101906107649190611a3f565b61ffff1611156107865760405162461bcd60e51b815260040161040f90611a5a565b61271087878381811061079b5761079b6118f9565b90506020020160208101906107b09190611a3f565b61ffff1611156107d25760405162461bcd60e51b815260040161040f90611a5a565b8a8a828181106107e4576107e46118f9565b90506020020160208101906107f99190611695565b6001600160a01b031663a8ecc2128a8a84818110610819576108196118f9565b905060200201602081019061082e9190611a3f565b898985818110610840576108406118f9565b90506020020160208101906108559190611a3f565b888886818110610867576108676118f9565b905060200201602081019061087c9190611a91565b6040516001600160e01b031960e086901b16815261ffff93841660048201529290911660248301521515604482015260640160408051808303816000875af11580156108cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f0919061190f565b848381518110610902576109026118f9565b6020026020010184848151811061091b5761091b6118f9565b6001600160801b039384166020918202929092010152911690528061093f8161195f565b915050610732565b507f7e9ddc937c042c1c6ce9743c4e9440cffeeb42d9296f0363e8c1be9ed33dbc8d8a8a8a8a8a8a8a8a8a8a6040516109899a99989796959493929190611ae3565b60405180910390a150505050505050505050565b6109a5611444565b6001600160a01b0381166109fb5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572726564546f5a65726f416464726573732829000000000000604482015260640161040f565b610a048161148c565b50565b610a0f6113fa565b6127108261ffff161180610a2857506127108161ffff16115b15610a455760405162461bcd60e51b815260040161040f90611a5a565b600095865260056020908152604080882061ffff9788168952825280882060019690960b8852948152848720938616875292909252919093208054938316600160b01b0261ffff60b01b1992909316600160a01b029190911663ffffffff60a01b1990931692909217179055565b610abb6113fa565b6001600160a01b038116610b115760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572726564546f5a65726f416464726573732829000000000000604482015260640161040f565b610a04816114de565b610b226113fa565b6002546001600160a01b031615610b715760405162461bcd60e51b8152602060048201526013602482015272466163746f7279416c7265616479536574282960681b604482015260640161040f565b6002546040516001600160a01b038084169216907ff36cf3b7f3187ed5217f19ea5137ed68a98983b4d678c78eb886fc378d2c13cf90600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b610bd56113fa565b60008b815260056020908152604080832061ffff808f16855290835281842060018e900b855283528184208c8216855290925290912054600160801b90041615610c615760405162461bcd60e51b815260206004820152601e60248201527f566f6c6174696c69747954696572416c7265616479456e61626c656428290000604482015260640161040f565b61ffff86161580610c7957506001600160801b038716155b80610c88575060008260010b13155b15610cd55760405162461bcd60e51b815260206004820152601c60248201527f566f6c6174696c6974795469657243616e6e6f7442655a65726f282900000000604482015260640161040f565b6103e8610ce3866005611b92565b610ced9190611bd2565b61ffff168861ffff161015610d445760405162461bcd60e51b815260206004820152601d60248201527f566f6c746174696c6974795469657254776170546f6f53686f72742829000000604482015260640161040f565b6127108461ffff161180610d5d57506127108361ffff16115b15610d7a5760405162461bcd60e51b815260040161040f90611a5a565b60008b8152600460209081526040808320546003909252909120546001600160a01b03918216911681610de65760405162461bcd60e51b815260206004820152601460248201527354776170536f757263654e6f74466f756e64282960601b604482015260640161040f565b604051635447cea560e01b815261ffff8d1660048201526000906001600160a01b03841690635447cea590602401602060405180830381865afa158015610e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e559190611bf3565b90508060020b600003610ea25760405162461bcd60e51b8152602060048201526015602482015274466565546965724e6f74537570706f72746564282960581b604482015260640161040f565b6000610eb28260018f900b611c16565b905060018d900b610ec38383611c50565b60020b14610f1f5760405162461bcd60e51b8152602060048201526024808201527f5469636b5370726561644e6f744d756c7469706c654f665469636b53706163696044820152636e67282960e01b606482015260840161040f565b60028160020b1215610f825760405162461bcd60e51b815260206004820152602660248201527f5469636b5370726561644e6f7441744c65617374446f75626c655469636b537060448201526572656164282960d01b606482015260840161040f565b50506040518060e001604052808a6001600160801b031681526020018961ffff1681526020018861ffff1681526020018761ffff1681526020018661ffff1681526020018560010b8152602001841515815250600560008f815260200190815260200160002060008e61ffff1661ffff16815260200190815260200160002060008d60010b60010b815260200190815260200160002060008c61ffff1661ffff16815260200190815260200160002060008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a81548161ffff021916908361ffff16021790555060408201518160000160126101000a81548161ffff021916908361ffff16021790555060608201518160000160146101000a81548161ffff021916908361ffff16021790555060808201518160000160166101000a81548161ffff021916908361ffff16021790555060a08201518160000160186101000a81548161ffff021916908360010b61ffff16021790555060c082015181600001601a6101000a81548160ff0219169083151502179055509050507ffd37f843947fe4917e89cd21eae094a1aa3e7360616a94ac64c61f96e294a14382828e8e8e8e8e8e8e8e8e8e6040516111789c9b9a99989796959493929190611cdd565b60405180910390a150505050505050505050505050565b6111976113fa565b6001600160f81b0319600084901a60f81b166111f55760405162461bcd60e51b815260206004820152601760248201527f54776170536f757263654e616d65496e76616c69642829000000000000000000604482015260640161040f565b6001600160a01b03821661124b5760405162461bcd60e51b815260206004820152601760248201527f54776170536f75726365416464726573735a65726f2829000000000000000000604482015260640161040f565b6001600160a01b03811661129a5760405162461bcd60e51b815260206004820152601660248201527543757276654d617468416464726573735a65726f282960501b604482015260640161040f565b6000838152600460205260409020546001600160a01b0316156112ff5760405162461bcd60e51b815260206004820152601960248201527f54776170536f75726365416c7265616479457869737473282900000000000000604482015260640161040f565b600083815260046020818152604080842080546001600160a01b03199081166001600160a01b0389811691821790935560038552958390208054909116918716919091179055805163c45a015560e01b815290517fafdbe5855c227c7df37abd1adbf1c55a6246e1c19d16aae676c1b3716da177a894889488948894929363c45a01559380840193908290030181865afa1580156113a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c59190611d67565b604080519485526001600160a01b039384166020860152918316848301529091166060830152519081900360800190a1505050565b6000546001600160a01b031633146114425760405162461bcd60e51b815260206004820152600b60248201526a4f776e65724f6e6c79282960a81b604482015260640161040f565b565b6001546001600160a01b031633146114425760405162461bcd60e51b815260206004820152600b60248201526a466565546f4f6e6c79282960a81b604482015260640161040f565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f5327f96e1b66776c2f90adb141c8f65efa8dd259adb405009213276527cbf69a90600090a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f5327f96e1b66776c2f90adb141c8f65efa8dd259adb405009213276527cbf69a9190a35050565b60008083601f84011261154057600080fd5b50813567ffffffffffffffff81111561155857600080fd5b6020830191508360208260051b850101111561157357600080fd5b9250929050565b6000806020838503121561158d57600080fd5b823567ffffffffffffffff8111156115a457600080fd5b6115b08582860161152e565b90969095509350505050565b6000806000806000806000806080898b0312156115d857600080fd5b883567ffffffffffffffff808211156115f057600080fd5b6115fc8c838d0161152e565b909a50985060208b013591508082111561161557600080fd5b6116218c838d0161152e565b909850965060408b013591508082111561163a57600080fd5b6116468c838d0161152e565b909650945060608b013591508082111561165f57600080fd5b5061166c8b828c0161152e565b999c989b5096995094979396929594505050565b6001600160a01b0381168114610a0457600080fd5b6000602082840312156116a757600080fd5b81356116b281611680565b9392505050565b803561ffff811681146116cb57600080fd5b919050565b8035600181900b81146116cb57600080fd5b60008060008060008060c087890312156116fb57600080fd5b8635955061170b602088016116b9565b9450611719604088016116d0565b9350611727606088016116b9565b9250611735608088016116b9565b915061174360a088016116b9565b90509295509295509295565b60006020828403121561176157600080fd5b5035919050565b6000806000806080858703121561177e57600080fd5b8435935061178e602086016116b9565b925061179c604086016116d0565b91506117aa606086016116b9565b905092959194509250565b6001600160801b0381168114610a0457600080fd5b803580151581146116cb57600080fd5b60008060008060008060008060008060006101608c8e0312156117fc57600080fd5b8b359a5061180c60208d016116b9565b995061181a60408d016116d0565b985061182860608d016116b9565b975060808c0135611838816117b5565b965061184660a08d016116b9565b955061185460c08d016116b9565b945061186260e08d016116b9565b93506118716101008d016116b9565b92506118806101208d016116d0565b915061188f6101408d016117ca565b90509295989b509295989b9093969950565b6000806000606084860312156118b657600080fd5b8335925060208401356118c881611680565b915060408401356118d881611680565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000806040838503121561192257600080fd5b825161192d816117b5565b602084015190925061193e816117b5565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b60006001820161197157611971611949565b5060010190565b8183526000602080850194508260005b858110156119b657813561199b81611680565b6001600160a01b031687529582019590820190600101611988565b509495945050505050565b600081518084526020808501945080840160005b838110156119b65781516001600160801b0316875295820195908201906001016119d5565b606081526000611a0e606083018688611978565b8281036020840152611a2081866119c1565b90508281036040840152611a3481856119c1565b979650505050505050565b600060208284031215611a5157600080fd5b6116b2826116b9565b6020808252601c908201527f50726f746f636f6c4665654365696c696e674578636565646564282900000000604082015260600190565b600060208284031215611aa357600080fd5b6116b2826117ca565b8183526000602080850194508260005b858110156119b65761ffff611ad0836116b9565b1687529582019590820190600101611abc565b60c081526000611af760c083018c8e611978565b602083820381850152611b0b828c8e611aac565b91508382036040850152611b20828a8c611aac565b8481036060860152878152889250810160005b88811015611b5857611b44846117ca565b151582529282019290820190600101611b33565b508481036080860152611b6b81886119c1565b9250505082810360a0840152611b8181856119c1565b9d9c50505050505050505050505050565b600061ffff80831681851681830481118215151615611bb357611bb3611949565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b600061ffff80841680611be757611be7611bbc565b92169190910492915050565b600060208284031215611c0557600080fd5b81518060020b81146116b257600080fd5b60008160020b8360020b80611c2d57611c2d611bbc565b627fffff19821460001982141615611c4757611c47611949565b90059392505050565b60008160020b8360020b627fffff600082136000841383830485118282161615611c7c57611c7c611949565b627fffff196000851282811687830587121615611c9b57611c9b611949565b60008712925085820587128484161615611cb757611cb7611949565b85850587128184161615611ccd57611ccd611949565b5050509290910295945050505050565b6001600160a01b038d811682528c16602082015261ffff8b8116604083015260018b900b606083015289811660808301526001600160801b03891660a0830152871660c0820152610180810161ffff871660e083015261ffff861661010083015261ffff8516610120830152611d5961014083018560010b9052565b821515610160830152611b81565b600060208284031215611d7957600080fd5b81516116b28161168056fea26469706673582212206d72de6acacd917f14e713d6281bf4741ee309fcb8fe990c0a00214c5481dd0364736f6c634300080d0033fd37f843947fe4917e89cd21eae094a1aa3e7360616a94ac64c61f96e294a143';

export class CoverPoolManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    sourceName: BytesLike,
    sourceAddress: string,
    curveAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CoverPoolManager> {
    return super.deploy(
      sourceName,
      sourceAddress,
      curveAddress,
      overrides || {},
    ) as Promise<CoverPoolManager>;
  }
  getDeployTransaction(
    sourceName: BytesLike,
    sourceAddress: string,
    curveAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      sourceName,
      sourceAddress,
      curveAddress,
      overrides || {},
    );
  }
  attach(address: string): CoverPoolManager {
    return super.attach(address) as CoverPoolManager;
  }
  connect(signer: Signer): CoverPoolManager__factory {
    return super.connect(signer) as CoverPoolManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoverPoolManagerInterface {
    return new utils.Interface(_abi) as CoverPoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): CoverPoolManager {
    return new Contract(address, _abi, signerOrProvider) as CoverPoolManager;
  }
}
