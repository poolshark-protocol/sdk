/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Deltas, DeltasInterface } from "../Deltas";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "fromDeltas",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "burnTick",
        type: "tuple",
      },
    ],
    name: "burnMaxCache",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "fromTick",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "burnDeltas",
        type: "tuple",
      },
    ],
    name: "burnMaxMinus",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint160",
            name: "price",
            type: "uint160",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxClaimed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxClaimed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.PoolState",
        name: "pool",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "finalDeltas",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "price",
                type: "uint160",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMaxClaimed",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMaxClaimed",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.PoolState",
            name: "pool",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amountInFilledMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutUnfilledMax",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint128",
                    name: "amountInDelta",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "amountOutDelta",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "amountInDeltaMax",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "amountOutDeltaMax",
                    type: "uint128",
                  },
                ],
                internalType: "struct ICoverPoolStructs.Deltas",
                name: "deltas",
                type: "tuple",
              },
              {
                internalType: "int128",
                name: "liquidityDelta",
                type: "int128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMaxMinus",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMaxMinus",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMaxStashed",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMaxStashed",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Tick",
            name: "claimTick",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint128",
                    name: "amountInDelta",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "amountOutDelta",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "amountInDeltaMax",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "amountOutDeltaMax",
                    type: "uint128",
                  },
                ],
                internalType: "struct ICoverPoolStructs.Deltas",
                name: "deltas",
                type: "tuple",
              },
              {
                internalType: "int128",
                name: "liquidityDelta",
                type: "int128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMaxMinus",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMaxMinus",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMaxStashed",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMaxStashed",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Tick",
            name: "finalTick",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "claimPriceLast",
                type: "uint160",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountIn",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOut",
                type: "uint128",
              },
              {
                internalType: "uint32",
                name: "accumEpochLast",
                type: "uint32",
              },
            ],
            internalType: "struct ICoverPoolStructs.Position",
            name: "position",
            type: "tuple",
          },
          {
            internalType: "uint160",
            name: "priceLower",
            type: "uint160",
          },
          {
            internalType: "uint160",
            name: "priceClaim",
            type: "uint160",
          },
          {
            internalType: "uint160",
            name: "priceUpper",
            type: "uint160",
          },
          {
            internalType: "uint160",
            name: "priceSpread",
            type: "uint160",
          },
          {
            internalType: "bool",
            name: "earlyReturn",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "removeLower",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "removeUpper",
            type: "bool",
          },
        ],
        internalType: "struct ICoverPoolStructs.UpdatePositionCache",
        name: "cache",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "int24",
            name: "lower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upper",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "claim",
            type: "int24",
          },
          {
            internalType: "bool",
            name: "zeroForOne",
            type: "bool",
          },
        ],
        internalType: "struct ICoverPoolStructs.UpdateParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "burnMaxPool",
    outputs: [
      {
        components: [
          {
            internalType: "uint160",
            name: "price",
            type: "uint160",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxClaimed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxClaimed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.PoolState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "fromTick",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "toDeltas",
        type: "tuple",
      },
    ],
    name: "from",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint160",
        name: "priceStart",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "priceEnd",
        type: "uint160",
      },
      {
        internalType: "bool",
        name: "isPool0",
        type: "bool",
      },
    ],
    name: "max",
    outputs: [
      {
        internalType: "uint128",
        name: "amountInDeltaMax",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amountOutDeltaMax",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint160",
        name: "priceStart",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "priceEnd",
        type: "uint160",
      },
      {
        internalType: "bool",
        name: "isPool0",
        type: "bool",
      },
    ],
    name: "maxAuction",
    outputs: [
      {
        internalType: "uint128",
        name: "amountInDeltaMax",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amountOutDeltaMax",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint160",
        name: "priceStart",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "priceEnd",
        type: "uint160",
      },
      {
        internalType: "bool",
        name: "isPool0",
        type: "bool",
      },
    ],
    name: "maxRoundUp",
    outputs: [
      {
        internalType: "uint128",
        name: "amountInDeltaMax",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amountOutDeltaMax",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "fromDeltas",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "toTick",
        type: "tuple",
      },
    ],
    name: "stash",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "fromDeltas",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "toTick",
        type: "tuple",
      },
    ],
    name: "to",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "fromDeltas",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "toDeltas",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "percentInTransfer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "percentOutTransfer",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "fromDeltas",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "toDeltas",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "percentInTransfer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "percentOutTransfer",
        type: "uint256",
      },
    ],
    name: "transferMax",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "fromTick",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "toDeltas",
        type: "tuple",
      },
    ],
    name: "unstash",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "tick",
        type: "tuple",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint160",
        name: "priceLower",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "priceUpper",
        type: "uint160",
      },
      {
        internalType: "bool",
        name: "isPool0",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdded",
        type: "bool",
      },
    ],
    name: "update",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "amountInDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDelta",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountInDeltaMax",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "amountOutDeltaMax",
                type: "uint128",
              },
            ],
            internalType: "struct ICoverPoolStructs.Deltas",
            name: "deltas",
            type: "tuple",
          },
          {
            internalType: "int128",
            name: "liquidityDelta",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxMinus",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMaxStashed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMaxStashed",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Tick",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "amountInDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDelta",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountInDeltaMax",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amountOutDeltaMax",
            type: "uint128",
          },
        ],
        internalType: "struct ICoverPoolStructs.Deltas",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x611b4361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100d95760003560e01c80639c2f07e111610096578063d6261edb11610070578063d6261edb1461024f578063d92f9a6714610262578063db51a5d714610275578063e5e8fea41461028857600080fd5b80639c2f07e1146101bd5780639d5e1d1a146101d0578063d44bf120146101e357600080fd5b806304feecb7146100de5780633d607ee71461010857806353695519146101295780635d29a878146101495780638b5ff0261461017c578063943f73081461019d575b600080fd5b6100f16100ec366004611464565b61029b565b6040516100ff929190611525565b60405180910390f35b61011b610116366004611541565b610360565b6040516100ff92919061156f565b61013c610137366004611541565b610577565b6040516100ff919061158c565b61015c6101573660046115ce565b61063e565b604080516001600160801b039384168152929091166020830152016100ff565b61018f61018a366004611626565b610702565b6040516100ff92919061166d565b6101b06101ab366004611464565b610897565b6040516100ff9190611689565b61011b6101cb366004611541565b61089f565b61018f6101de366004611626565b610abc565b6101f66101f1366004611854565b610c4a565b6040516100ff919081516001600160a01b031681526020808301516001600160801b0390811691830191909152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b61015c61025d3660046115ce565b610d27565b61015c6102703660046115ce565b610ddb565b6100f1610283366004611464565b610e8f565b61011b6102963660046119b6565b610f18565b6102a3611233565b6102ab61125a565b8351835180516102bc908390611a4b565b6001600160801b0316905250604080850151845190910180516102e0908390611a4b565b6001600160801b031690525060208085015184519091018051610304908390611a4b565b6001600160801b031690525060608085015184519091018051610328908390611a4b565b6001600160801b0316905250506040805160808101825260008082526020820181905291810182905260608101919091529391925050565b61036861125a565b610370611233565b600084608001516001600160801b03168560000151604001516001600160801b031661039c9190611a76565b8551604001516103c4906001600160801b03166b012ced32a16a1b11e826288960261b611a8e565b6103ce9190611ac3565b8551519091506000906b012ced32a16a1b11e826288960261b906103fc9084906001600160801b0316611a8e565b6104069190611ac3565b86518051919250829161041a908390611ae5565b6001600160801b0316905250845181908690610437908390611a4b565b6001600160801b03169052508551604090810151908601805161045b908390611a4b565b6001600160801b039081169091528751600060409091015260a088015188516060015161048e9450908216925016611a76565b8551606001516104b6906001600160801b03166b012ced32a16a1b11e826288960261b611a8e565b6104c09190611ac3565b905060006b012ced32a16a1b11e826288960261b828760000151602001516001600160801b03166104f19190611a8e565b6104fb9190611ac3565b90508086600001516020018181516105139190611ae5565b6001600160801b0316905250602085018051829190610533908390611a4b565b6001600160801b031690525085516060908101519086018051610557908390611a4b565b6001600160801b0316905250508451600060609091015250929391925050565b61057f61125a565b81604001516001600160801b031683604001516001600160801b0316106105aa5781604001516105b0565b82604001515b836040018181516105c19190611ae5565b6001600160801b0390811690915260408501511660010390506105e657600060408401525b81606001516001600160801b031683606001516001600160801b031610610611578160600151610617565b82606001515b836060018181516106289190611ae5565b6001600160801b03169052508290505b92915050565b600080826106735761066e866001600160801b0316856001600160a01b0316876001600160a01b03166001611060565b61069b565b61069b866001600160801b0316866001600160a01b0316866001600160a01b03166001611079565b9150826106cf576106ca866001600160801b0316856001600160a01b0316876001600160a01b03166001611079565b6106f7565b6106f7866001600160801b0316866001600160a01b0316866001600160a01b03166001611060565b905094509492505050565b61070a611233565b610712611233565b60006b012ced32a16a1b11e826288960261b8588600001516001600160801b031661073d9190611a8e565b6107479190611ac3565b905086600001516001600160801b0316816001600160801b031610156107a75780876000018181516107799190611ae5565b6001600160801b0316905250855181908790610796908390611a4b565b6001600160801b03169052506107c9565b8651865187906107b8908390611a4b565b6001600160801b0316905250600087525b5060006b012ced32a16a1b11e826288960261b8488602001516001600160801b03166107f59190611a8e565b6107ff9190611ac3565b905086602001516001600160801b0316816001600160801b031610156108625780876020018181516108319190611ae5565b6001600160801b0316905250602086018051829190610851908390611a4b565b6001600160801b031690525061088c565b8660200151866020018181516108789190611a4b565b6001600160801b0316905250600060208801525b509495939450505050565b61057f611233565b6108a761125a565b6108af611233565b8360800151836040018181516108c59190611a4b565b6001600160801b031690525060a08401516060840180516108e7908390611a4b565b6001600160801b03908116909152855160400151608087015160009350610912929182169116611a76565b905080156109c75760008186608001516001600160801b03166b012ced32a16a1b11e826288960261b6109459190611a8e565b61094f9190611ac3565b8651519091506000906b012ced32a16a1b11e826288960261b9061097d9084906001600160801b0316611a8e565b6109879190611ac3565b87518051919250829161099b908390611ae5565b6001600160801b03169052508551819087906109b8908390611a4b565b6001600160801b031690525050505b84516060015160a08601516109e8916001600160801b039081169116611a76565b90508015610aa7576000818660a001516001600160801b03166b012ced32a16a1b11e826288960261b610a1b9190611a8e565b610a259190611ac3565b905060006b012ced32a16a1b11e826288960261b828860000151602001516001600160801b0316610a569190611a8e565b610a609190611ac3565b9050808760000151602001818151610a789190611ae5565b6001600160801b0316905250602086018051829190610a98908390611a4b565b6001600160801b031690525050505b505060006080840181905260a0840152509091565b610ac4611233565b610acc611233565b60006b012ced32a16a1b11e826288960261b8588604001516001600160801b0316610af79190611a8e565b610b019190611ac3565b9050806001600160801b031687604001516001600160801b03161115610b64578087604001818151610b339190611ae5565b6001600160801b0316905250604086018051829190610b53908390611a4b565b6001600160801b0316905250610b8e565b866040015186604001818151610b7a9190611a4b565b6001600160801b0316905250600060408801525b5060006b012ced32a16a1b11e826288960261b8488606001516001600160801b0316610bba9190611a8e565b610bc49190611ac3565b9050806001600160801b031687606001516001600160801b03161115610c16578087606001818151610bf69190611ae5565b6001600160801b0316905250606086018051829190610851908390611a4b565b866060015186606001818151610c2c9190611a4b565b6001600160801b031690525050600060608701525093949293505050565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152600080610c9984604001518661016001518760e00151600001518760c0015161063e565b606088015191935091506001600160801b03808416911611610cbf578560600151610cc1565b815b86606001818151610cd29190611ae5565b6001600160801b0390811690915260808801518382169116119050610cfb578560800151610cfd565b805b86608001818151610d0e9190611ae5565b6001600160801b031690525085925050505b9392505050565b60008082610d5c57610d57866001600160801b0316866001600160a01b0316866001600160a01b03166000611060565b610d84565b610d84866001600160801b0316856001600160a01b0316876001600160a01b03166000611079565b915082610db3576106ca866001600160801b0316866001600160a01b0316866001600160a01b03166000611079565b6106f7866001600160801b0316856001600160a01b0316876001600160a01b03166000611060565b60008082610e1057610e0b866001600160801b0316866001600160a01b0316866001600160a01b03166001611060565b610e38565b610e38866001600160801b0316856001600160a01b0316876001600160a01b03166001611079565b915082610e67576106ca866001600160801b0316866001600160a01b0316866001600160a01b03166001611079565b6106f7866001600160801b0316856001600160a01b0316876001600160a01b03166001611060565b610e97611233565b610e9f61125a565b835183518051610eb0908390611a4b565b6001600160801b031690525060208085015184519091018051610ed4908390611a4b565b6001600160801b03169052506040840151608084018051610ef6908390611a4b565b6001600160801b0316905250606084015160a084018051610328908390611a4b565b610f2061125a565b610f28611233565b6000808515610f4857610f3e89888a6001610d27565b9092509050610f5b565b610f558989896000610d27565b90925090505b8415610fa457818a604001818151610f739190611a4b565b6001600160801b031690525060608a018051829190610f93908390611a4b565b6001600160801b0316905250611027565b816001600160801b03168a604001516001600160801b031611610fcb578960400151610fcd565b815b8a604001818151610fde9190611ae5565b6001600160801b0390811690915260608c01518382169116119050611007578960600151611009565b805b8a60600181815161101a9190611ae5565b6001600160801b03169052505b60408051608081018252600080825260208201526001600160801b03938416918101919091529116606082015297989650505050505050565b600061106e85858585611087565b90505b949350505050565b600061106e858585856110df565b600081156110b6576110af6110a3606087901b86860386611109565b85808204910615150190565b9050611071565b836110c8606087901b86860386611181565b816110d5576110d5611aad565b0495945050505050565b600081156110f8576110af85858503600160601b611109565b61106e85858503600160601b611181565b6000611116848484611181565b9050818061112657611126611aad565b83850915610d205760001981106111775760405162461bcd60e51b81526020600482015260116024820152704d617855696e744578636565646564282960781b604482015260640160405180910390fd5b6001019392505050565b60008080600019858709858702925082811083820303915050806000036111ba57600084116111af57600080fd5b508290049050610d20565b8084116111c657600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6040518060c0016040528061126d611233565b815260006020820181905260408201819052606082018190526080820181905260a09091015290565b60405160a0810167ffffffffffffffff811182821017156112c757634e487b7160e01b600052604160045260246000fd5b60405290565b6040516101e0810167ffffffffffffffff811182821017156112c757634e487b7160e01b600052604160045260246000fd5b80356001600160801b038116811461131657600080fd5b919050565b60006080828403121561132d57600080fd5b6040516080810181811067ffffffffffffffff8211171561135e57634e487b7160e01b600052604160045260246000fd5b60405290508061136d836112ff565b815261137b602084016112ff565b602082015261138c604084016112ff565b604082015261139d606084016112ff565b60608201525092915050565b600061012082840312156113bc57600080fd5b60405160c0810181811067ffffffffffffffff821117156113ed57634e487b7160e01b600052604160045260246000fd5b6040529050806113fd848461131b565b8152608083013580600f0b811461141357600080fd5b602082015261142460a084016112ff565b604082015261143560c084016112ff565b606082015261144660e084016112ff565b608082015261145861010084016112ff565b60a08201525092915050565b6000806101a0838503121561147857600080fd5b611482848461131b565b915061149184608085016113a9565b90509250929050565b80516001600160801b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b6114d882825161149a565b6020810151600f0b608083015260408101516001600160801b0380821660a08501528060608401511660c08501528060808401511660e08501528060a08401511661010085015250505050565b6101a08101611534828561149a565b610d2060808301846114cd565b6000806101a0838503121561155557600080fd5b61155f84846113a9565b915061149184610120850161131b565b6101a0810161157e82856114cd565b610d2061012083018461149a565b610120810161063882846114cd565b6001600160a01b03811681146115b057600080fd5b50565b80356113168161159b565b8035801515811461131657600080fd5b600080600080608085870312156115e457600080fd5b6115ed856112ff565b935060208501356115fd8161159b565b9250604085013561160d8161159b565b915061161b606086016115be565b905092959194509250565b600080600080610140858703121561163d57600080fd5b611647868661131b565b9350611656866080870161131b565b939693955050505061010082013591610120013590565b610100810161167c828561149a565b610d20608083018461149a565b60808101610638828461149a565b600060a082840312156116a957600080fd5b6116b1611296565b905081356116be8161159b565b81526116cc602083016112ff565b60208201526116dd604083016112ff565b60408201526116ee606083016112ff565b60608201526116ff608083016112ff565b608082015292915050565b600060a0828403121561171c57600080fd5b611724611296565b905081356117318161159b565b815261173f602083016112ff565b6020820152611750604083016112ff565b6040820152611761606083016112ff565b6060820152608082013563ffffffff811681146116ff57600080fd5b8035600281900b811461131657600080fd5b600060e082840312156117a157600080fd5b60405160e0810181811067ffffffffffffffff821117156117d257634e487b7160e01b600052604160045260246000fd5b60405290508082356117e38161159b565b815260208301356117f38161159b565b6020820152611804604084016112ff565b60408201526118156060840161177d565b60608201526118266080840161177d565b608082015261183760a0840161177d565b60a082015261184860c084016115be565b60c08201525092915050565b600080600083850361072081121561186b57600080fd5b6118758686611697565b93506105a080609f198301121561188b57600080fd5b6118936112cd565b91506118a28760a0880161131b565b82526101206118b38882890161131b565b60208401526101a06118c789828a01611697565b6040850152610240880135606085015261026088013560808501526118f0896102808a016113a9565b60a0850152611903896103a08a016113a9565b60c0850152611916896104c08a0161170a565b60e085015261192861056089016115b3565b61010085015261193b61058089016115b3565b8285015261194a8389016115b3565b61014085015261195d6105c089016115b3565b6101608501526119706105e089016115be565b61018085015261198361060089016115be565b8185015250505061199761062086016115be565b6101c082015291506119ad85610640860161178f565b90509250925092565b6000806000806000806101c087890312156119d057600080fd5b6119da88886113a9565b95506119e961012088016112ff565b94506101408701356119fa8161159b565b9350610160870135611a0b8161159b565b9250611a1a61018088016115be565b9150611a296101a088016115be565b90509295509295509295565b634e487b7160e01b600052601160045260246000fd5b60006001600160801b03808316818516808303821115611a6d57611a6d611a35565b01949350505050565b60008219821115611a8957611a89611a35565b500190565b6000816000190483118215151615611aa857611aa8611a35565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611ae057634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160801b0383811690831681811015611b0557611b05611a35565b03939250505056fea264697066735822122090327324072104d599d4bbf5109098e0a0d9f886f93ad3c659c38d8c660a262d64736f6c634300080d0033";

export class Deltas__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Deltas> {
    return super.deploy(overrides || {}) as Promise<Deltas>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Deltas {
    return super.attach(address) as Deltas;
  }
  connect(signer: Signer): Deltas__factory {
    return super.connect(signer) as Deltas__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeltasInterface {
    return new utils.Interface(_abi) as DeltasInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Deltas {
    return new Contract(address, _abi, signerOrProvider) as Deltas;
  }
}
