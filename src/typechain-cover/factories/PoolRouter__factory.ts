/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PoolRouter, PoolRouterInterface } from '../PoolRouter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_factory',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'pools',
        type: 'address[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint160',
            name: 'priceLimit',
            type: 'uint160',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'bool',
            name: 'exactIn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'zeroForOne',
            type: 'bool',
          },
          {
            internalType: 'bytes',
            name: 'callbackData',
            type: 'bytes',
          },
        ],
        internalType: 'struct PoolsharkStructs.SwapParams[]',
        name: 'params',
        type: 'tuple[]',
      },
    ],
    name: 'multiCall',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'poolsharkSwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a060405234801561001057600080fd5b50604051610bc9380380610bc983398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610b3f61008a600039600060600152610b3f6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063857f5f6f14610046578063c45a01551461005b578063cd5489f11461009e575b600080fd5b610059610054366004610528565b6100b1565b005b6100827f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100596100ac366004610819565b6101ce565b6000336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011591906108db565b90506000336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610157573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017b91906108db565b9050600061018b848601866108f8565b905060008712156101b25780516101ac9084906101a78a61095a565b610334565b506101c5565b80516101c39083906101a78961095a565b505b50505050505050565b80518251146102245760405162461bcd60e51b815260206004820152601b60248201527f496e70757441727261794c656e677468734d69736d617463682829000000000060448201526064015b60405180910390fd5b60005b825181101561032f57604080516020808201835233918290528251908101919091520160405160208183030381529060405282828151811061026b5761026b610976565b602002602001015160a0018190525082818151811061028c5761028c610976565b60200260200101516001600160a01b031663e323eb0e8383815181106102b4576102b4610976565b60200260200101516040518263ffffffff1660e01b81526004016102d8919061098c565b60408051808303816000875af11580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a9190610a37565b5050808061032790610a5b565b915050610227565b505050565b60006001600160a01b03841661036b57813410156103645760405162461bcd60e51b815260040161021b90610a74565b5080610521565b6040516370a0823160e01b815230600482015284906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d89190610abc565b6040516323b872dd60e01b81526001600160a01b03878116600483015233602483015260448201879052919250908316906323b872dd906064016020604051808303816000875af1158015610431573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104559190610ad5565b5060003d801561047057602081146104795760009150610485565b60019150610485565b60206000803e60005191505b50806104a35760405162461bcd60e51b815260040161021b90610a74565b6040516370a0823160e01b81523060048201526000906001600160a01b038916906370a0823190602401602060405180830381865afa1580156104ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050e9190610abc565b905061051a8382610af2565b9450505050505b9392505050565b6000806000806060858703121561053e57600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561056457600080fd5b818701915087601f83011261057857600080fd5b81358181111561058757600080fd5b88602082850101111561059957600080fd5b95989497505060200194505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156105e1576105e16105a8565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610610576106106105a8565b604052919050565b600067ffffffffffffffff821115610632576106326105a8565b5060051b60200190565b6001600160a01b038116811461065157600080fd5b50565b801515811461065157600080fd5b803561066d81610654565b919050565b600082601f83011261068357600080fd5b813567ffffffffffffffff81111561069d5761069d6105a8565b6106b0601f8201601f19166020016105e7565b8181528460208386010111156106c557600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126106f357600080fd5b8135602061070861070383610618565b6105e7565b82815260059290921b8401810191818101908684111561072757600080fd5b8286015b8481101561080e57803567ffffffffffffffff8082111561074c5760008081fd5b9088019060c0828b03601f19018113156107665760008081fd5b61076e6105be565b8784013561077b8161063c565b815260408481013561078c8161063c565b828a01526060858101356001600160801b03811681146107ac5760008081fd5b808385015250608091506107c1828701610662565b9083015260a06107d2868201610662565b838301529285013592848411156107eb57600091508182fd5b6107f98e8b86890101610672565b9083015250865250505091830191830161072b565b509695505050505050565b6000806040838503121561082c57600080fd5b823567ffffffffffffffff8082111561084457600080fd5b818501915085601f83011261085857600080fd5b8135602061086861070383610618565b82815260059290921b8401810191818101908984111561088757600080fd5b948201945b838610156108ae57853561089f8161063c565b8252948201949082019061088c565b965050860135925050808211156108c457600080fd5b506108d1858286016106e2565b9150509250929050565b6000602082840312156108ed57600080fd5b81516105218161063c565b60006020828403121561090a57600080fd5b6040516020810181811067ffffffffffffffff8211171561092d5761092d6105a8565b604052823561093b8161063c565b81529392505050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b820161096f5761096f610944565b5060000390565b634e487b7160e01b600052603260045260246000fd5b6000602080835260018060a01b0380855116828501528082860151166040850152506001600160801b0360408501511660608401526060840151151560808401526080840151151560a084015260a084015160c08085015280518060e086015260005b81811015610a0c57828101840151868201610100015283016109ef565b81811115610a1f57600061010083880101525b50601f01601f19169390930161010001949350505050565b60008060408385031215610a4a57600080fd5b505080516020909101519092909150565b600060018201610a6d57610a6d610944565b5060010190565b60208082526028908201527f5472616e736665724661696c6564286d73672e73656e6465722c206164647265604082015267737328746869732960c01b606082015260800190565b600060208284031215610ace57600080fd5b5051919050565b600060208284031215610ae757600080fd5b815161052181610654565b600082821015610b0457610b04610944565b50039056fea26469706673582212204fbfca8840dc8cfbaadfc011688b4a7a1a018967827509bdd457538dfaad15c064736f6c634300080d0033';

export class PoolRouter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<PoolRouter> {
    return super.deploy(_factory, overrides || {}) as Promise<PoolRouter>;
  }
  getDeployTransaction(
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, overrides || {});
  }
  attach(address: string): PoolRouter {
    return super.attach(address) as PoolRouter;
  }
  connect(signer: Signer): PoolRouter__factory {
    return super.connect(signer) as PoolRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolRouterInterface {
    return new utils.Interface(_abi) as PoolRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): PoolRouter {
    return new Contract(address, _abi, signerOrProvider) as PoolRouter;
  }
}
