/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  PoolsharkRangeSource,
  PoolsharkRangeSourceInterface,
} from '../PoolsharkRangeSource';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rangePoolFactory',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_rangePoolManager',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'WaitUntilAboveMinTick',
    type: 'error',
  },
  {
    inputs: [],
    name: 'WaitUntilBelowMaxTick',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract ITwapSource',
            name: 'source',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'min',
                type: 'uint160',
              },
              {
                internalType: 'uint160',
                name: 'max',
                type: 'uint160',
              },
            ],
            internalType: 'struct ITickMath.PriceBounds',
            name: 'bounds',
            type: 'tuple',
          },
          {
            internalType: 'address',
            name: 'token0',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'token1',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'inputPool',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'minAmountPerAuction',
            type: 'uint256',
          },
          {
            internalType: 'uint32',
            name: 'genesisTime',
            type: 'uint32',
          },
          {
            internalType: 'int16',
            name: 'minPositionWidth',
            type: 'int16',
          },
          {
            internalType: 'int16',
            name: 'tickSpread',
            type: 'int16',
          },
          {
            internalType: 'uint16',
            name: 'twapLength',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'auctionLength',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'blockTime',
            type: 'uint16',
          },
          {
            internalType: 'uint8',
            name: 'token0Decimals',
            type: 'uint8',
          },
          {
            internalType: 'uint8',
            name: 'token1Decimals',
            type: 'uint8',
          },
          {
            internalType: 'bool',
            name: 'minAmountLowerPriced',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.Immutables',
        name: 'constants',
        type: 'tuple',
      },
      {
        internalType: 'int24',
        name: 'latestTick',
        type: 'int24',
      },
    ],
    name: 'calculateAverageTick',
    outputs: [
      {
        internalType: 'int24',
        name: 'averageTick',
        type: 'int24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'feeTier',
        type: 'uint16',
      },
    ],
    name: 'feeTierTickSpacing',
    outputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token0',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token1',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: 'feeTier',
        type: 'uint16',
      },
    ],
    name: 'getPool',
    outputs: [
      {
        internalType: 'address',
        name: 'pool',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract ITwapSource',
            name: 'source',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'min',
                type: 'uint160',
              },
              {
                internalType: 'uint160',
                name: 'max',
                type: 'uint160',
              },
            ],
            internalType: 'struct ITickMath.PriceBounds',
            name: 'bounds',
            type: 'tuple',
          },
          {
            internalType: 'address',
            name: 'token0',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'token1',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'inputPool',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'minAmountPerAuction',
            type: 'uint256',
          },
          {
            internalType: 'uint32',
            name: 'genesisTime',
            type: 'uint32',
          },
          {
            internalType: 'int16',
            name: 'minPositionWidth',
            type: 'int16',
          },
          {
            internalType: 'int16',
            name: 'tickSpread',
            type: 'int16',
          },
          {
            internalType: 'uint16',
            name: 'twapLength',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'auctionLength',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'blockTime',
            type: 'uint16',
          },
          {
            internalType: 'uint8',
            name: 'token0Decimals',
            type: 'uint8',
          },
          {
            internalType: 'uint8',
            name: 'token1Decimals',
            type: 'uint8',
          },
          {
            internalType: 'bool',
            name: 'minAmountLowerPriced',
            type: 'bool',
          },
        ],
        internalType: 'struct ICoverPoolStructs.Immutables',
        name: 'constants',
        type: 'tuple',
      },
    ],
    name: 'initialize',
    outputs: [
      {
        internalType: 'uint8',
        name: 'initializable',
        type: 'uint8',
      },
      {
        internalType: 'int24',
        name: 'startingTick',
        type: 'int24',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'oneSecond',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rangePoolFactory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rangePoolManager',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60c060405234801561001057600080fd5b506040516200167b3803806200167b83398101604081905261003191610064565b6001600160a01b039182166080521660a052610097565b80516001600160a01b038116811461005f57600080fd5b919050565b6000806040838503121561007757600080fd5b61008083610048565b915061008e60208401610048565b90509250929050565b60805160a0516115aa620000d16000396000818160db015261039b01526000818161011a01528181610193015261044801526115aa6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80635361ae351161005b5780635361ae351461013c5780635447cea51461016b578063b17797141461017e578063c45a01551461019157600080fd5b8063063bdf4e1461008d57806321ed4b27146100b857806332522f7b146100d65780634c14b5c214610115575b600080fd5b6100a061009b366004610dd7565b6101b7565b60405160029190910b81526020015b60405180910390f35b6100c16103e881565b60405163ffffffff90911681526020016100af565b6100fd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100af565b6100fd7f000000000000000000000000000000000000000000000000000000000000000081565b61014f61014a366004610e11565b6102ab565b6040805160ff909316835260029190910b6020830152016100af565b6100a0610179366004610e35565b61037f565b6100fd61018c366004610e52565b610414565b7f00000000000000000000000000000000000000000000000000000000000000006100fd565b6000806101c3846104bd565b905060006101d58561010001516109d9565b6101e0906002610eb3565b905060005b60048110156102a25760008084836004811061020357610203610f40565b60200201516102129088610f56565b60020b1215610242578584836004811061022e5761022e610f40565b602002015161023d9190610f56565b610263565b83826004811061025457610254610f40565b60200201516102639087610f56565b90508260020b8160020b1361028f5780925083826004811061028757610287610f40565b602002015194505b508061029a81610f9e565b9150506101e5565b50505092915050565b600080600083610160015161ffff166103e885610120015161ffff166102d19190610fb7565b6102db9190610ff9565b90506000806102ee866080015184610a02565b915091508061031357610305866080015184610aa7565b506000958695509350505050565b8161032657506000958695509350505050565b600194506000610335876104bd565b6060810151604082015160208301518351939450600493610356919061101c565b610360919061101c565b61036a919061101c565b6103749190611063565b945050505050915091565b604051635e2849ed60e11b815261ffff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bc5093da90602401602060405180830381865afa1580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e91906110a8565b92915050565b604051630650adaf60e51b81526001600160a01b038481166004830152838116602483015261ffff831660448301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063ca15b5e090606401602060405180830381865afa158015610491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b591906110c5565b949350505050565b6104c5610b1d565b60408051600480825260a082019092526000916020820160808036833701905050905060006103e884610160015161ffff166105019190610ff9565b63ffffffff1615610534576103e8846101600151600261052191906110e2565b61ffff1661052f9190610ff9565b610537565b60025b905060008260008151811061054e5761054e610f40565b602002602001019063ffffffff16908163ffffffff1681525050808260018151811061057c5761057c610f40565b602002602001019063ffffffff16908163ffffffff16815250508084610120015161ffff166105ab9190611103565b826002815181106105be576105be610f40565b602002602001019063ffffffff16908163ffffffff168152505083610120015161ffff16826003815181106105f5576105f5610f40565b63ffffffff909216602092830291909101909101526080840151604051633d8859ff60e21b81526000916001600160a01b03169063f62167fc9061063d908690600401611128565b600060405180830381865afa15801561065a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106829190810190611247565b5050505090508260008151811061069b5761069b610f40565b6020026020010151836002815181106106b6576106b6610f40565b60200260200101516106c89190611103565b60030b816002815181106106de576106de610f40565b6020026020010151826000815181106106f9576106f9610f40565b602002602001015161070b919061133c565b6107159190611382565b60020b84528251839060009061072d5761072d610f40565b60200260200101518360038151811061074857610748610f40565b602002602001015161075a9190611103565b60030b8160038151811061077057610770610f40565b60200260200101518260008151811061078b5761078b610f40565b602002602001015161079d919061133c565b6107a79190611382565b60020b60208501528251839060019081106107c4576107c4610f40565b6020026020010151836002815181106107df576107df610f40565b60200260200101516107f19190611103565b60030b8160028151811061080757610807610f40565b60200260200101518260018151811061082257610822610f40565b6020026020010151610834919061133c565b61083e9190611382565b60020b604085015282518390600190811061085b5761085b610f40565b60200260200101518360038151811061087657610876610f40565b60200260200101516108889190611103565b60030b8160038151811061089e5761089e610f40565b6020026020010151826001815181106108b9576108b9610f40565b60200260200101516108cb919061133c565b6108d59190611382565b60020b6060850152610100850151600090600181900b906108f590610b08565b6108ff919061101c565b9050600086610100015160010b61091a8861010001516109d9565b6109249190610f56565b905060005b60048110156109ce578260020b87826004811061094857610948610f40565b602002015160020b1215610977578287826004811061096957610969610f40565b60029290920b602090920201525b8160020b87826004811061098d5761098d610f40565b602002015160020b13156109bc57818782600481106109ae576109ae610f40565b60029290920b602090920201525b806109c681610f9e565b915050610929565b505050505050919050565b6000600182900b806109ee620d89e7196113b7565b6109f89190611063565b61040e9190610eb3565b6000806000846001600160a01b031663641ad8a96040518163ffffffff1660e01b81526004016101e060405180830381865afa158015610a46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6a9190611423565b509a50505050505050505050508363ffffffff16816020015161ffff1610158463ffffffff16826040015161ffff16101592509250509250929050565b604051639d5466b960e01b815261ffff821660048201526001600160a01b03831690639d5466b990602401600060405180830381600087803b158015610aec57600080fd5b505af1158015610b00573d6000803e3d6000fd5b505050505050565b6000600182900b6109f881620d89e719611063565b60405180608001604052806004906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610b7457610b74610b3b565b60405290565b6040516101e0810167ffffffffffffffff81118282101715610b7457610b74610b3b565b604051601f8201601f1916810167ffffffffffffffff81118282101715610bc757610bc7610b3b565b604052919050565b6001600160a01b0381168114610be457600080fd5b50565b8035610bf281610bcf565b919050565b600060408284031215610c0957600080fd5b610c11610b51565b90508135610c1e81610bcf565b81526020820135610c2e81610bcf565b602082015292915050565b803563ffffffff81168114610bf257600080fd5b8035600181900b8114610bf257600080fd5b61ffff81168114610be457600080fd5b8035610bf281610c5f565b60ff81168114610be457600080fd5b8035610bf281610c7a565b80358015158114610bf257600080fd5b60006102008284031215610cb757600080fd5b610cbf610b7a565b9050610cca82610be7565b8152610cd98360208401610bf7565b6020820152610cea60608301610be7565b6040820152610cfb60808301610be7565b6060820152610d0c60a08301610be7565b608082015260c082013560a0820152610d2760e08301610c39565b60c0820152610100610d3a818401610c4d565b60e0830152610120610d4d818501610c4d565b828401526101409150610d61828501610c6f565b90830152610160610d73848201610c6f565b828401526101809150610d87828501610c6f565b908301526101a0610d99848201610c89565b828401526101c09150610dad828501610c89565b90830152610dbe6101e08401610c94565b9082015292915050565b8060020b8114610be457600080fd5b6000806102208385031215610deb57600080fd5b610df58484610ca4565b9150610200830135610e0681610dc8565b809150509250929050565b60006102008284031215610e2457600080fd5b610e2e8383610ca4565b9392505050565b600060208284031215610e4757600080fd5b8135610e2e81610c5f565b600080600060608486031215610e6757600080fd5b8335610e7281610bcf565b92506020840135610e8281610bcf565b91506040840135610e9281610c5f565b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b60008160020b8360020b627fffff600082136000841383830485118282161615610edf57610edf610e9d565b627fffff196000851282811687830587121615610efe57610efe610e9d565b60008712925085820587128484161615610f1a57610f1a610e9d565b85850587128184161615610f3057610f30610e9d565b5050509290910295945050505050565b634e487b7160e01b600052603260045260246000fd5b60008160020b8360020b6000811281627fffff1901831281151615610f7d57610f7d610e9d565b81627fffff018313811615610f9457610f94610e9d565b5090039392505050565b600060018201610fb057610fb0610e9d565b5060010190565b600063ffffffff80831681851681830481118215151615610fda57610fda610e9d565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff8084168061101057611010610fe3565b92169190910492915050565b60008160020b8360020b6000821282627fffff0382138115161561104257611042610e9d565b82627fffff1903821281161561105a5761105a610e9d565b50019392505050565b60008160020b8360020b8061107a5761107a610fe3565b627fffff1982146000198214161561109457611094610e9d565b90059392505050565b8051610bf281610dc8565b6000602082840312156110ba57600080fd5b8151610e2e81610dc8565b6000602082840312156110d757600080fd5b8151610e2e81610bcf565b600061ffff80831681851681830481118215151615610fda57610fda610e9d565b600063ffffffff8381169083168181101561112057611120610e9d565b039392505050565b6020808252825182820181905260009190848201906040850190845b8181101561116657835163ffffffff1683529284019291840191600101611144565b50909695505050505050565b600067ffffffffffffffff82111561118c5761118c610b3b565b5060051b60200190565b8051600681900b8114610bf257600080fd5b8051610bf281610bcf565b600082601f8301126111c457600080fd5b815160206111d96111d483611172565b610b9e565b82815260059290921b840181019181810190868411156111f857600080fd5b8286015b8481101561121c57805161120f81610bcf565b83529183019183016111fc565b509695505050505050565b80516fffffffffffffffffffffffffffffffff81168114610bf257600080fd5b600080600080600060a0868803121561125f57600080fd5b855167ffffffffffffffff8082111561127757600080fd5b818801915088601f83011261128b57600080fd5b8151602061129b6111d483611172565b82815260059290921b8401810191818101908c8411156112ba57600080fd5b948201945b838610156112df576112d086611196565b825294820194908201906112bf565b918b01519199509093505050808211156112f857600080fd5b50611305888289016111b3565b945050611314604087016111a8565b925061132260608701611227565b91506113306080870161109d565b90509295509295909350565b60008160060b8360060b6000811281667fffffffffffff190183128115161561136757611367610e9d565b81667fffffffffffff018313811615610f9457610f94610e9d565b60008160060b8360060b8061139957611399610fe3565b667fffffffffffff1982146000198214161561109457611094610e9d565b60008160020b627fffff1981036113d0576113d0610e9d565b60000392915050565b80516001600160c81b0381168114610bf257600080fd5b60006040828403121561140257600080fd5b61140a610b51565b905061141582611227565b8152610c2e60208301611227565b6000806000806000806000806000806000808c8e036101e081121561144757600080fd5b8d5161145281610c7a565b60208f0151909d5061146381610c5f565b60408f0151909c5061147481610dc8565b9a5061148260608f01611196565b995060808e015161149281610bcf565b60a08f01519099506114a381610bcf565b97506114b160c08f01611227565b96506114bf60e08f01611227565b95506114ce6101008f016113d9565b94506114dd6101208f016113d9565b9350606061013f19820112156114f257600080fd5b506040516060810181811067ffffffffffffffff8211171561151657611516610b3b565b6040526101408e015161152881610c5f565b81526101608e015161153981610c5f565b60208201526101808e015161154d81610c5f565b604082015291506115628e6101a08f016113f0565b90509295989b509295989b509295989b56fea264697066735822122056011c5883308ae76a4ee12ba2ae142c17bc189cc64a58c2865a4c15264b6c5864736f6c634300080d0033';

export class PoolsharkRangeSource__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rangePoolFactory: string,
    _rangePoolManager: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<PoolsharkRangeSource> {
    return super.deploy(
      _rangePoolFactory,
      _rangePoolManager,
      overrides || {},
    ) as Promise<PoolsharkRangeSource>;
  }
  getDeployTransaction(
    _rangePoolFactory: string,
    _rangePoolManager: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rangePoolFactory,
      _rangePoolManager,
      overrides || {},
    );
  }
  attach(address: string): PoolsharkRangeSource {
    return super.attach(address) as PoolsharkRangeSource;
  }
  connect(signer: Signer): PoolsharkRangeSource__factory {
    return super.connect(signer) as PoolsharkRangeSource__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolsharkRangeSourceInterface {
    return new utils.Interface(_abi) as PoolsharkRangeSourceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): PoolsharkRangeSource {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as PoolsharkRangeSource;
  }
}
