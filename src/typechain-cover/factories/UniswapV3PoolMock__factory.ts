/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapV3PoolMock,
  UniswapV3PoolMockInterface,
} from "../UniswapV3PoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_swapFee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "_tickSpacing",
        type: "int24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "secondsAgos",
        type: "uint32[]",
      },
    ],
    name: "observe",
    outputs: [
      {
        internalType: "int56[]",
        name: "tickCumulatives",
        type: "int56[]",
      },
      {
        internalType: "uint160[]",
        name: "secondsPerLiquidityCumulativeX128s",
        type: "uint160[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_observationCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "_observationCardinalityNext",
        type: "uint16",
      },
    ],
    name: "setObservationCardinality",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int56",
        name: "_tickCumulative0",
        type: "int56",
      },
      {
        internalType: "int56",
        name: "_tickCumulative1",
        type: "int56",
      },
      {
        internalType: "int56",
        name: "_tickCumulative2",
        type: "int56",
      },
      {
        internalType: "int56",
        name: "_tickCumulative3",
        type: "int56",
      },
    ],
    name: "setTickCumulatives",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot0",
    outputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "uint16",
        name: "observationIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "feeProtocol",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tickSpacing",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161088638038061088683398101604081905261002f91610123565b826001600160a01b0316846001600160a01b0316106100885760405162461bcd60e51b81526020600482015260116024820152703bb937b733903a37b5b2b71037b93232b960791b604482015260640160405180910390fd5b60008054336001600160a01b031991821617909155600180549091166001600160a01b039586161790556002805462ffffff938416600355939094166001600160b81b031990931692909217600160a01b9290911691909102179055790500000000000006000000000000090000000000000a0004000460045561018b565b80516001600160a01b038116811461011e57600080fd5b919050565b6000806000806080858703121561013957600080fd5b61014285610107565b935061015060208601610107565b9250604085015162ffffff8116811461016857600080fd5b8092505060608501518060020b811461018057600080fd5b939692955090935050565b6106ec8061019a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063883bdbfd1161005b578063883bdbfd146101ce578063d0c93a7c146101ef578063d118ee4e14610217578063d21220a71461024d57600080fd5b8063095edd821461008d5780630dfe16811461012557806332148f67146101555780633850c7bd14610183575b600080fd5b61012361009b3660046104d3565b6004805471ffffffffffffffffffffffffffff00000000191664010000000066ffffffffffffff9687160266ffffffffffffff60581b191617600160581b948616949094029390931771ffffffffffffffffffffffffffffffffffff16600160901b928516929092026001600160c81b031691909117600160c81b9190931602919091179055565b005b600154610138906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610123610163366004610539565b6004805461ffff909216620100000263ffff000019909216919091179055565b6004805460408051600160601b8152600060208201529081019290925261ffff808216606084015262010000909104166080820152606460a0820152600160c082015260e00161014c565b6101e16101dc36600461055b565b610260565b60405161014c9291906105d0565b6002805461020491600160a01b909104900b81565b60405160029190910b815260200161014c565b610123610225366004610657565b6004805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b600254610138906001600160a01b031681565b6060808267ffffffffffffffff81111561027c5761027c61068a565b6040519080825280602002602001820160405280156102a5578160200160208202803683370190505b50915060048054906101000a900460060b826000815181106102c9576102c96106a0565b600692830b60209182029290920101526004548351600160581b90910490910b90839060019081106102fd576102fd6106a0565b600692830b60209182029290920101526004548351600160901b90910490910b9083906002908110610331576103316106a0565b600692830b60209182029290920101526004548351600160c81b90910490910b9083906003908110610365576103656106a0565b60069290920b602092830291909101909101528267ffffffffffffffff8111156103915761039161068a565b6040519080825280602002602001820160405280156103ba578160200160208202803683370190505b50905069c91435798c9226a0e6d7816000815181106103db576103db6106a0565b60200260200101906001600160a01b031690816001600160a01b03168152505069c91435798c9226a0e6d781600181518110610419576104196106a0565b60200260200101906001600160a01b031690816001600160a01b03168152505069c914354b931643013aeb81600281518110610457576104576106a0565b60200260200101906001600160a01b031690816001600160a01b03168152505069c914354b931643013aeb81600381518110610495576104956106a0565b60200260200101906001600160a01b031690816001600160a01b0316815250509250929050565b8035600681900b81146104ce57600080fd5b919050565b600080600080608085870312156104e957600080fd5b6104f2856104bc565b9350610500602086016104bc565b925061050e604086016104bc565b915061051c606086016104bc565b905092959194509250565b803561ffff811681146104ce57600080fd5b60006020828403121561054b57600080fd5b61055482610527565b9392505050565b6000806020838503121561056e57600080fd5b823567ffffffffffffffff8082111561058657600080fd5b818501915085601f83011261059a57600080fd5b8135818111156105a957600080fd5b8660208260051b85010111156105be57600080fd5b60209290920196919550909350505050565b604080825283519082018190526000906020906060840190828701845b8281101561060c57815160060b845292840192908401906001016105ed565b5050508381038285015284518082528583019183019060005b8181101561064a5783516001600160a01b031683529284019291840191600101610625565b5090979650505050505050565b6000806040838503121561066a57600080fd5b61067383610527565b915061068160208401610527565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220d29fad2c50ff6b9b438fea8ee24240093abf97eca6d714e8917ff19a3666f36664736f6c634300080d0033";

export class UniswapV3PoolMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _token0: string,
    _token1: string,
    _swapFee: BigNumberish,
    _tickSpacing: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3PoolMock> {
    return super.deploy(
      _token0,
      _token1,
      _swapFee,
      _tickSpacing,
      overrides || {}
    ) as Promise<UniswapV3PoolMock>;
  }
  getDeployTransaction(
    _token0: string,
    _token1: string,
    _swapFee: BigNumberish,
    _tickSpacing: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token0,
      _token1,
      _swapFee,
      _tickSpacing,
      overrides || {}
    );
  }
  attach(address: string): UniswapV3PoolMock {
    return super.attach(address) as UniswapV3PoolMock;
  }
  connect(signer: Signer): UniswapV3PoolMock__factory {
    return super.connect(signer) as UniswapV3PoolMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3PoolMockInterface {
    return new utils.Interface(_abi) as UniswapV3PoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3PoolMock {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3PoolMock;
  }
}
