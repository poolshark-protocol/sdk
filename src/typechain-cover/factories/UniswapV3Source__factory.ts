/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapV3Source,
  UniswapV3SourceInterface,
} from "../UniswapV3Source";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniV3Factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WaitUntilAboveMinTick",
    type: "error",
  },
  {
    inputs: [],
    name: "WaitUntilBelowMaxTick",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract ITwapSource",
            name: "source",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "min",
                type: "uint160",
              },
              {
                internalType: "uint160",
                name: "max",
                type: "uint160",
              },
            ],
            internalType: "struct ITickMath.PriceBounds",
            name: "bounds",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "address",
            name: "inputPool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmountPerAuction",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "genesisTime",
            type: "uint32",
          },
          {
            internalType: "int16",
            name: "minPositionWidth",
            type: "int16",
          },
          {
            internalType: "int16",
            name: "tickSpread",
            type: "int16",
          },
          {
            internalType: "uint16",
            name: "twapLength",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "auctionLength",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "blockTime",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "minAmountLowerPriced",
            type: "bool",
          },
        ],
        internalType: "struct ICoverPoolStructs.Immutables",
        name: "constants",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "latestTick",
        type: "int24",
      },
    ],
    name: "calculateAverageTick",
    outputs: [
      {
        internalType: "int24",
        name: "averageTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "feeTier",
        type: "uint16",
      },
    ],
    name: "feeTierTickSpacing",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "feeTier",
        type: "uint16",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract ITwapSource",
            name: "source",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "min",
                type: "uint160",
              },
              {
                internalType: "uint160",
                name: "max",
                type: "uint160",
              },
            ],
            internalType: "struct ITickMath.PriceBounds",
            name: "bounds",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "address",
            name: "inputPool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmountPerAuction",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "genesisTime",
            type: "uint32",
          },
          {
            internalType: "int16",
            name: "minPositionWidth",
            type: "int16",
          },
          {
            internalType: "int16",
            name: "tickSpread",
            type: "int16",
          },
          {
            internalType: "uint16",
            name: "twapLength",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "auctionLength",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "blockTime",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "minAmountLowerPriced",
            type: "bool",
          },
        ],
        internalType: "struct ICoverPoolStructs.Immutables",
        name: "constants",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "uint8",
        name: "initializable",
        type: "uint8",
      },
      {
        internalType: "int24",
        name: "startingTick",
        type: "int24",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oneSecond",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniV3Factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161149538038061149583398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516113f56100a0600039600081816101120152818161016101528181610369015261041601526113f56000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635447cea51161005b5780635447cea5146100fa578063705e474b1461010d578063b17797141461014c578063c45a01551461015f57600080fd5b8063063bdf4e1461008257806321ed4b27146100ad5780635361ae35146100cb575b600080fd5b610095610090366004610d92565b610185565b60405160029190910b81526020015b60405180910390f35b6100b66103e881565b60405163ffffffff90911681526020016100a4565b6100de6100d9366004610dcc565b610279565b6040805160ff909316835260029190910b6020830152016100a4565b610095610108366004610df0565b61034d565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100a4565b61013461015a366004610e0d565b6103e2565b7f0000000000000000000000000000000000000000000000000000000000000000610134565b6000806101918461048b565b905060006101a38561010001516109a4565b6101ae906002610e6e565b905060005b6004811015610270576000808483600481106101d1576101d1610efb565b60200201516101e09088610f11565b60020b121561021057858483600481106101fc576101fc610efb565b602002015161020b9190610f11565b610231565b83826004811061022257610222610efb565b60200201516102319087610f11565b90508260020b8160020b1361025d5780925083826004811061025557610255610efb565b602002015194505b508061026881610f59565b9150506101b3565b50505092915050565b600080600083610160015161ffff166103e885610120015161ffff1661029f9190610f72565b6102a99190610fb4565b90506000806102bc8660800151846109cd565b91509150806102e1576102d3866080015184610a5b565b506000958695509350505050565b816102f457506000958695509350505050565b6001945060006103038761048b565b60608101516040820151602083015183519394506004936103249190610fd7565b61032e9190610fd7565b6103389190610fd7565b610342919061101e565b945050505050915091565b6040516307b12f2760e41b815261ffff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637b12f27090602401602060405180830381865afa1580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190611058565b92915050565b604051630b4c774160e11b81526001600160a01b038481166004830152838116602483015261ffff831660448301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631698ee8290606401602060405180830381865afa15801561045f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104839190611075565b949350505050565b610493610ad1565b60408051600480825260a082019092526000916020820160808036833701905050905060006103e884610160015161ffff166104cf9190610fb4565b63ffffffff1615610502576103e884610160015160026104ef9190611092565b61ffff166104fd9190610fb4565b610505565b60025b905060008260008151811061051c5761051c610efb565b602002602001019063ffffffff16908163ffffffff1681525050808260018151811061054a5761054a610efb565b602002602001019063ffffffff16908163ffffffff16815250508084610120015161ffff1661057991906110b3565b8260028151811061058c5761058c610efb565b602002602001019063ffffffff16908163ffffffff168152505083610120015161ffff16826003815181106105c3576105c3610efb565b63ffffffff90921660209283029190910190910152608084015160405163883bdbfd60e01b81526000916001600160a01b03169063883bdbfd9061060b9086906004016110d8565b600060405180830381865afa158015610628573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261065091908101906111ba565b5090508260008151811061066657610666610efb565b60200260200101518360028151811061068157610681610efb565b602002602001015161069391906110b3565b60030b816002815181106106a9576106a9610efb565b6020026020010151826000815181106106c4576106c4610efb565b60200260200101516106d69190611286565b6106e091906112cc565b60020b8452825183906000906106f8576106f8610efb565b60200260200101518360038151811061071357610713610efb565b602002602001015161072591906110b3565b60030b8160038151811061073b5761073b610efb565b60200260200101518260008151811061075657610756610efb565b60200260200101516107689190611286565b61077291906112cc565b60020b602085015282518390600190811061078f5761078f610efb565b6020026020010151836002815181106107aa576107aa610efb565b60200260200101516107bc91906110b3565b60030b816002815181106107d2576107d2610efb565b6020026020010151826001815181106107ed576107ed610efb565b60200260200101516107ff9190611286565b61080991906112cc565b60020b604085015282518390600190811061082657610826610efb565b60200260200101518360038151811061084157610841610efb565b602002602001015161085391906110b3565b60030b8160038151811061086957610869610efb565b60200260200101518260018151811061088457610884610efb565b60200260200101516108969190611286565b6108a091906112cc565b60020b6060850152610100850151600090600181900b906108c090610abc565b6108ca9190610fd7565b9050600086610100015160010b6108e58861010001516109a4565b6108ef9190610f11565b905060005b6004811015610999578260020b87826004811061091357610913610efb565b602002015160020b1215610942578287826004811061093457610934610efb565b60029290920b602090920201525b8160020b87826004811061095857610958610efb565b602002015160020b1315610987578187826004811061097957610979610efb565b60029290920b602090920201525b8061099181610f59565b9150506108f4565b505050505050919050565b6000600182900b806109b9620d89e719611301565b6109c3919061101e565b6103dc9190610e6e565b600080600080856001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610a11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a359190611323565b505063ffffffff8a1661ffff928316811115995091161015955050505050509250929050565b6040516332148f6760e01b815261ffff821660048201526001600160a01b038316906332148f6790602401600060405180830381600087803b158015610aa057600080fd5b505af1158015610ab4573d6000803e3d6000fd5b505050505050565b6000600182900b6109c381620d89e71961101e565b60405180608001604052806004906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040516101e0810167ffffffffffffffff81118282101715610b2957610b29610aef565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b5857610b58610aef565b604052919050565b6001600160a01b0381168114610b7557600080fd5b50565b8035610b8381610b60565b919050565b600060408284031215610b9a57600080fd5b6040516040810181811067ffffffffffffffff82111715610bbd57610bbd610aef565b6040529050808235610bce81610b60565b81526020830135610bde81610b60565b6020919091015292915050565b803563ffffffff81168114610b8357600080fd5b8035600181900b8114610b8357600080fd5b61ffff81168114610b7557600080fd5b8035610b8381610c11565b60ff81168114610b7557600080fd5b8035610b8381610c2c565b8015158114610b7557600080fd5b8035610b8381610c46565b60006102008284031215610c7257600080fd5b610c7a610b05565b9050610c8582610b78565b8152610c948360208401610b88565b6020820152610ca560608301610b78565b6040820152610cb660808301610b78565b6060820152610cc760a08301610b78565b608082015260c082013560a0820152610ce260e08301610beb565b60c0820152610100610cf5818401610bff565b60e0830152610120610d08818501610bff565b828401526101409150610d1c828501610c21565b90830152610160610d2e848201610c21565b828401526101809150610d42828501610c21565b908301526101a0610d54848201610c3b565b828401526101c09150610d68828501610c3b565b90830152610d796101e08401610c54565b9082015292915050565b8060020b8114610b7557600080fd5b6000806102208385031215610da657600080fd5b610db08484610c5f565b9150610200830135610dc181610d83565b809150509250929050565b60006102008284031215610ddf57600080fd5b610de98383610c5f565b9392505050565b600060208284031215610e0257600080fd5b8135610de981610c11565b600080600060608486031215610e2257600080fd5b8335610e2d81610b60565b92506020840135610e3d81610b60565b91506040840135610e4d81610c11565b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b60008160020b8360020b627fffff600082136000841383830485118282161615610e9a57610e9a610e58565b627fffff196000851282811687830587121615610eb957610eb9610e58565b60008712925085820587128484161615610ed557610ed5610e58565b85850587128184161615610eeb57610eeb610e58565b5050509290910295945050505050565b634e487b7160e01b600052603260045260246000fd5b60008160020b8360020b6000811281627fffff1901831281151615610f3857610f38610e58565b81627fffff018313811615610f4f57610f4f610e58565b5090039392505050565b600060018201610f6b57610f6b610e58565b5060010190565b600063ffffffff80831681851681830481118215151615610f9557610f95610e58565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff80841680610fcb57610fcb610f9e565b92169190910492915050565b60008160020b8360020b6000821282627fffff03821381151615610ffd57610ffd610e58565b82627fffff1903821281161561101557611015610e58565b50019392505050565b60008160020b8360020b8061103557611035610f9e565b627fffff1982146000198214161561104f5761104f610e58565b90059392505050565b60006020828403121561106a57600080fd5b8151610de981610d83565b60006020828403121561108757600080fd5b8151610de981610b60565b600061ffff80831681851681830481118215151615610f9557610f95610e58565b600063ffffffff838116908316818110156110d0576110d0610e58565b039392505050565b6020808252825182820181905260009190848201906040850190845b8181101561111657835163ffffffff16835292840192918401916001016110f4565b50909695505050505050565b600067ffffffffffffffff82111561113c5761113c610aef565b5060051b60200190565b600082601f83011261115757600080fd5b8151602061116c61116783611122565b610b2f565b82815260059290921b8401810191818101908684111561118b57600080fd5b8286015b848110156111af5780516111a281610b60565b835291830191830161118f565b509695505050505050565b600080604083850312156111cd57600080fd5b825167ffffffffffffffff808211156111e557600080fd5b818501915085601f8301126111f957600080fd5b8151602061120961116783611122565b82815260059290921b8401810191818101908984111561122857600080fd5b948201945b838610156112565785518060060b81146112475760008081fd5b8252948201949082019061122d565b9188015191965090935050508082111561126f57600080fd5b5061127c85828601611146565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff19018312811516156112b1576112b1610e58565b81667fffffffffffff018313811615610f4f57610f4f610e58565b60008160060b8360060b806112e3576112e3610f9e565b667fffffffffffff1982146000198214161561104f5761104f610e58565b60008160020b627fffff19810361131a5761131a610e58565b60000392915050565b600080600080600080600060e0888a03121561133e57600080fd5b875161134981610b60565b602089015190975061135a81610d83565b604089015190965061136b81610c11565b606089015190955061137c81610c11565b608089015190945061138d81610c11565b60a089015190935061139e81610c2c565b60c08901519092506113af81610c46565b809150509295989194975092955056fea264697066735822122026493dc4c817cea0305e93c15678266bc17693d238c1e02dc37cd71ec5ab0cc164736f6c634300080d0033";

export class UniswapV3Source__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _uniV3Factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3Source> {
    return super.deploy(
      _uniV3Factory,
      overrides || {}
    ) as Promise<UniswapV3Source>;
  }
  getDeployTransaction(
    _uniV3Factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_uniV3Factory, overrides || {});
  }
  attach(address: string): UniswapV3Source {
    return super.attach(address) as UniswapV3Source;
  }
  connect(signer: Signer): UniswapV3Source__factory {
    return super.connect(signer) as UniswapV3Source__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3SourceInterface {
    return new utils.Interface(_abi) as UniswapV3SourceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Source {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Source;
  }
}
