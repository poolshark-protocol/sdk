/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PoolRouter, PoolRouterInterface } from '../PoolRouter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'factory_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'implementation_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'implementation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'pools',
        type: 'address[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint160',
            name: 'priceLimit',
            type: 'uint160',
          },
          {
            internalType: 'uint128',
            name: 'amount',
            type: 'uint128',
          },
          {
            internalType: 'bool',
            name: 'exactIn',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'zeroForOne',
            type: 'bool',
          },
          {
            internalType: 'bytes',
            name: 'callbackData',
            type: 'bytes',
          },
        ],
        internalType: 'struct PoolsharkStructs.SwapParams[]',
        name: 'params',
        type: 'tuple[]',
      },
    ],
    name: 'multiCall',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'poolsharkSwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60c060405234801561001057600080fd5b50604051610f0b380380610f0b83398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a051610e456100c6600039600081816056015261020a01526000818160ae015261023f0152610e456000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635c60da1b14610051578063857f5f6f14610094578063c45a0155146100a9578063cd5489f1146100d0575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100a76100a236600461075c565b6100e3565b005b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6100a76100de366004610a70565b610315565b6000336001600160a01b031663fdf536656040518163ffffffff1660e01b815260040160c060405180830381865afa158015610123573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101479190610b4f565b60408082015160608084015160808086015185516001600160a01b039586166020820152949092169484019490945260010b908201529192506000910160408051808303601f1901815282825280516020918201208551928601516060808801518885015180519086015160808b01516bffffffffffffffffffffffff1998851b8916978a019790975293831b8716603489015290821b86166048880152811b8516605c8701521b909216607084015260f01b60848301529150600090610263907f000000000000000000000000000000000000000000000000000000000000000090608601604051602081830303815290604052847f000000000000000000000000000000000000000000000000000000000000000061046b565b9050336001600160a01b038216146102bb5760405162461bcd60e51b8152602060048201526016602482015275496e76616c696443616c6c657241646472657373282960501b60448201526064015b60405180910390fd5b60006102c985870187610c17565b905060008812156102f457604084015181516102ee91906102e98b610c79565b610546565b5061030b565b6060840151815161030991906102e98a610c79565b505b5050505050505050565b80518251146103665760405162461bcd60e51b815260206004820152601b60248201527f496e70757441727261794c656e677468734d69736d617463682829000000000060448201526064016102b2565b60005b82518110156104665760408051602080820183523391829052825190810191909152016040516020818303038152906040528282815181106103ad576103ad610c95565b602002602001015160a001819052508281815181106103ce576103ce610c95565b60200260200101516001600160a01b031663e323eb0e8383815181106103f6576103f6610c95565b60200260200101516040518263ffffffff1660e01b815260040161041a9190610cab565b60408051808303816000875af1158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c9190610d56565b5050600101610369565b505050565b605f1983018051603f1985018051601f19870180518851808a0160200180516c5af43d3d93803e606057fd5bf38c52600c198c018d905260028301604881901b78593da1005b363d3d373d3d3d3d610000806062363936013d73176020198e01527f9e4ac34f21c619cefc926c8bd93b54bf5a39c7ab2127a895af1cc0691d7e3dff6039198e01526064840160781b716100003d81600a3d39f336602c57343d527f176059198e015260f01b8252606e8301604b198d01209152908a5291529152915260009061053c81858561073a565b9695505050505050565b60006001600160a01b03841661057d57813410156105765760405162461bcd60e51b81526004016102b290610d7a565b5080610733565b6040516370a0823160e01b815230600482015284906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156105c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ea9190610dc2565b6040516323b872dd60e01b81526001600160a01b03878116600483015233602483015260448201879052919250908316906323b872dd906064016020604051808303816000875af1158015610643573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106679190610ddb565b5060003d8015610682576020811461068b5760009150610697565b60019150610697565b60206000803e60005191505b50806106b55760405162461bcd60e51b81526004016102b290610d7a565b6040516370a0823160e01b81523060048201526000906001600160a01b038916906370a0823190602401602060405180830381865afa1580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107209190610dc2565b905061072c8382610df8565b9450505050505b9392505050565b600060ff60005350603592835260601b60015260155260556000908120915290565b6000806000806060858703121561077257600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561079857600080fd5b818701915087601f8301126107ac57600080fd5b8135818111156107bb57600080fd5b8860208285010111156107cd57600080fd5b95989497505060200194505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610815576108156107dc565b60405290565b6040805190810167ffffffffffffffff81118282101715610815576108156107dc565b604051601f8201601f1916810167ffffffffffffffff81118282101715610867576108676107dc565b604052919050565b600067ffffffffffffffff821115610889576108896107dc565b5060051b60200190565b6001600160a01b03811681146108a857600080fd5b50565b80151581146108a857600080fd5b80356108c4816108ab565b919050565b600082601f8301126108da57600080fd5b813567ffffffffffffffff8111156108f4576108f46107dc565b610907601f8201601f191660200161083e565b81815284602083860101111561091c57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261094a57600080fd5b8135602061095f61095a8361086f565b61083e565b82815260059290921b8401810191818101908684111561097e57600080fd5b8286015b84811015610a6557803567ffffffffffffffff808211156109a35760008081fd5b9088019060c0828b03601f19018113156109bd5760008081fd5b6109c56107f2565b878401356109d281610893565b81526040848101356109e381610893565b828a01526060858101356001600160801b0381168114610a035760008081fd5b80838501525060809150610a188287016108b9565b9083015260a0610a298682016108b9565b83830152928501359284841115610a4257600091508182fd5b610a508e8b868901016108c9565b90830152508652505050918301918301610982565b509695505050505050565b60008060408385031215610a8357600080fd5b823567ffffffffffffffff80821115610a9b57600080fd5b818501915085601f830112610aaf57600080fd5b81356020610abf61095a8361086f565b82815260059290921b84018101918181019089841115610ade57600080fd5b948201945b83861015610b05578535610af681610893565b82529482019490820190610ae3565b96505086013592505080821115610b1b57600080fd5b50610b2885828601610939565b9150509250929050565b80516108c481610893565b8051600181900b81146108c457600080fd5b600081830360c0811215610b6257600080fd5b60405160a0810181811067ffffffffffffffff82111715610b8557610b856107dc565b6040528351610b9381610893565b81526040601f1983011215610ba757600080fd5b610baf61081b565b91506020840151610bbf81610893565b82526040840151610bcf81610893565b80602084015250816020820152610be860608501610b32565b6040820152610bf960808501610b32565b6060820152610c0a60a08501610b3d565b6080820152949350505050565b600060208284031215610c2957600080fd5b6040516020810181811067ffffffffffffffff82111715610c4c57610c4c6107dc565b6040528235610c5a81610893565b81529392505050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b8201610c8e57610c8e610c63565b5060000390565b634e487b7160e01b600052603260045260246000fd5b6000602080835260018060a01b0380855116828501528082860151166040850152506001600160801b0360408501511660608401526060840151151560808401526080840151151560a084015260a084015160c08085015280518060e086015260005b81811015610d2b5782810184015186820161010001528301610d0e565b81811115610d3e57600061010083880101525b50601f01601f19169390930161010001949350505050565b60008060408385031215610d6957600080fd5b505080516020909101519092909150565b60208082526028908201527f5472616e736665724661696c6564286d73672e73656e6465722c206164647265604082015267737328746869732960c01b606082015260800190565b600060208284031215610dd457600080fd5b5051919050565b600060208284031215610ded57600080fd5b8151610733816108ab565b600082821015610e0a57610e0a610c63565b50039056fea2646970667358221220af943cecdafb5efaa10039d6278840868c4c528f48a927b660b3373e5b9ddc4964736f6c634300080d0033';

export class PoolRouter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    factory_: string,
    implementation_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<PoolRouter> {
    return super.deploy(
      factory_,
      implementation_,
      overrides || {},
    ) as Promise<PoolRouter>;
  }
  getDeployTransaction(
    factory_: string,
    implementation_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      factory_,
      implementation_,
      overrides || {},
    );
  }
  attach(address: string): PoolRouter {
    return super.attach(address) as PoolRouter;
  }
  connect(signer: Signer): PoolRouter__factory {
    return super.connect(signer) as PoolRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolRouterInterface {
    return new utils.Interface(_abi) as PoolRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): PoolRouter {
    return new Contract(address, _abi, signerOrProvider) as PoolRouter;
  }
}
