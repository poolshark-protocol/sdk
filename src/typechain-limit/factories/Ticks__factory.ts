/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Ticks, TicksInterface } from '../Ticks';

const _abi = [
  {
    inputs: [],
    name: 'InvalidLowerTick',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidPositionAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidPositionBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidUpperTick',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LiquidityOverflow',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LiquidityUnderflow',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'minTick',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'maxTick',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint160',
        name: 'startPrice',
        type: 'uint160',
      },
    ],
    name: 'Initialize',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint160',
        name: 'price',
        type: 'uint160',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickAtPrice',
        type: 'int24',
      },
    ],
    name: 'Swap',
    type: 'event',
  },
];

const _bytecode =
  '';

export class Ticks__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<Ticks> {
    return super.deploy(overrides || {}) as Promise<Ticks>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ticks {
    return super.attach(address) as Ticks;
  }
  connect(signer: Signer): Ticks__factory {
    return super.connect(signer) as Ticks__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicksInterface {
    return new utils.Interface(_abi) as TicksInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ticks {
    return new Contract(address, _abi, signerOrProvider) as Ticks;
  }
}
