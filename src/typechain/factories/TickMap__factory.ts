/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TickMap, TickMapInterface } from "../TickMap";

const _abi = [
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        components: [
          {
            internalType: "contract ITwapSource",
            name: "source",
            type: "ITwapSource",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "min",
                type: "uint160",
              },
              {
                internalType: "uint160",
                name: "max",
                type: "uint160",
              },
            ],
            internalType: "struct ITickMath.PriceBounds",
            name: "bounds",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "address",
            name: "inputPool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmountPerAuction",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "genesisTime",
            type: "uint32",
          },
          {
            internalType: "int16",
            name: "minPositionWidth",
            type: "int16",
          },
          {
            internalType: "int16",
            name: "tickSpread",
            type: "int16",
          },
          {
            internalType: "uint16",
            name: "twapLength",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "auctionLength",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "blockTime",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "token0Decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "token1Decimals",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "minAmountLowerPriced",
            type: "bool",
          },
        ],
        internalType: "struct ICoverPoolStructs.Immutables",
        name: "constants",
        type: "tuple",
      },
    ],
    name: "getIndices",
    outputs: [
      {
        internalType: "uint256",
        name: "tickIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wordIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockIndex",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610c7961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063020c5aa1146100665780631f4be9fd146100885780639c0f24a9146100b3578063b5ebd1de146100e3578063d9bc05fc146100f6575b600080fd5b81801561007257600080fd5b50610086610081366004610a97565b610124565b005b61009b610096366004610a97565b61019b565b60405160029190910b81526020015b60405180910390f35b8180156100bf57600080fd5b506100d36100ce366004610a97565b61029e565b60405190151581526020016100aa565b61009b6100f1366004610a97565b61032a565b610109610104366004610ad5565b610438565b604080519384526020840192909252908201526060016100aa565b60008060006101338685610438565b600082815260028901602052604081208054600160ff87161b191690819055939650919450925003610193576000818152600186810160205260408220805460ff86169290921b199091169081905590036101935784546001821b191685555b505050505050565b6000806000806101ab8786610438565b600082815260028a0160205260408120549396509194509250600160ff86161b60001901909116908190036102755760008281526001888101602052604082205460ff86169190911b6000190116908190036102475787546000196001851b0116600081900361022357899650505050505050610297565b61022c816105dc565b60ff16600081815260018b0160205260409020549094509150505b610250816105dc565b60ff16600884901b179350876002016000858152602001908152602001600020549150505b610290610281826105dc565b60ff16600885901b1787610680565b9450505050505b9392505050565b6000806000806102ae8786610438565b600082815260028a0160205260409020549295509093509150600160ff85161b81179081036102e4576001945050505050610297565b60008381526002880160209081526040808320939093558382526001808a01909152918120805460ff90951683901b9094179093558654911b1790945550919392505050565b60008060008061033a8786610438565b92509250925060008360ff1660ff1461036f57506000828152600287016020526040902054600019600160ff861681011b0119165b8060000361042c5760008260ff1660ff146103ad5760018460ff166001016001901b0319886001016000858152602001908152602001600020541690505b806000036103fe57875460001960018581011b01191660008190036103da57899650505050505050610297565b6103e381610702565b60ff16600081815260018b0160205260409020549094509150505b61040781610702565b60ff16600884901b179350876002016000858152602001908152602001600020549150505b61029061028182610702565b600080600061044b8461010001516107f8565b60020b8560020b131561049b5760405162461bcd60e51b81526020600482015260136024820152725469636b496e6465784f766572666c6f77282960681b60448201526064015b60405180910390fd5b6104a9846101000151610827565b60020b8560020b12156104f55760405162461bcd60e51b81526020600482015260146024820152735469636b496e646578556e646572666c6f77282960601b6044820152606401610492565b83610100015160010b8560020b8161050f5761050f610b0a565b0760020b156105555760405162461bcd60e51b81526020600482015260126024820152715469636b496e646578496e76616c6964282960701b6044820152606401610492565b83610100015160010b61056c856101000151610827565b860360020b8161057e5761057e610b0a565b0592505050600881901c601082901c60ff8111156105d55760405162461bcd60e51b8152602060048201526014602482015273426c6f636b496e6465784f766572666c6f77282960601b6044820152606401610492565b9250925092565b60008082116105ed576105ed610b20565b600160801b821061060057608091821c91015b68010000000000000000821061061857604091821c91015b640100000000821061062c57602091821c91015b62010000821061063e57601091821c91015b610100821061064f57600891821c91015b6010821061065f57600491821c91015b6004821061066f57600291821c91015b6002821061067b576001015b919050565b60006106908261010001516107f8565b60020262ffffff168311156106dd5760405162461bcd60e51b81526020600482015260136024820152725469636b496e6465784f766572666c6f77282960681b6044820152606401610492565b6106eb826101000151610827565b60020b82610100015160010b840201905092915050565b600080821161071357610713610b20565b5060ff6fffffffffffffffffffffffffffffffff82161561073757607f190161073f565b608082901c91505b67ffffffffffffffff82161561075857603f1901610760565b604082901c91505b63ffffffff82161561077557601f190161077d565b602082901c91505b61ffff82161561079057600f1901610798565b601082901c91505b60ff8216156107aa57600719016107b2565b600882901c91505b600f8216156107c457600319016107cc565b600482901c91505b60038216156107de57600119016107e6565b600282901c91505b600182161561067b5760001901919050565b6000600182900b8061080d620d89e719610b4c565b6108179190610b6e565b6108219190610bb6565b92915050565b6000600182900b61081781620d89e719610b6e565b8035600281900b811461067b57600080fd5b6040516101e0810167ffffffffffffffff8111828210171561088057634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b038116811461089b57600080fd5b50565b803561067b81610886565b6000604082840312156108bb57600080fd5b6040516040810181811067ffffffffffffffff821117156108ec57634e487b7160e01b600052604160045260246000fd5b60405290508082356108fd81610886565b8152602083013561090d81610886565b6020919091015292915050565b803563ffffffff8116811461067b57600080fd5b8035600181900b811461067b57600080fd5b803561ffff8116811461067b57600080fd5b803560ff8116811461067b57600080fd5b8035801515811461067b57600080fd5b6000610200828403121561098657600080fd5b61098e61084e565b90506109998261089e565b81526109a883602084016108a9565b60208201526109b96060830161089e565b60408201526109ca6080830161089e565b60608201526109db60a0830161089e565b608082015260c082013560a08201526109f660e0830161091a565b60c0820152610100610a0981840161092e565b60e0830152610120610a1c81850161092e565b828401526101409150610a30828501610940565b90830152610160610a42848201610940565b828401526101809150610a56828501610940565b908301526101a0610a68848201610952565b828401526101c09150610a7c828501610952565b90830152610a8d6101e08401610963565b9082015292915050565b60008060006102408486031215610aad57600080fd5b610ab68461083c565b925060208401359150610acc8560408601610973565b90509250925092565b6000806102208385031215610ae957600080fd5b610af28361083c565b9150610b018460208501610973565b90509250929050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160020b627fffff198103610b6557610b65610b36565b60000392915050565b60008160020b8360020b80610b9357634e487b7160e01b600052601260045260246000fd5b627fffff19821460001982141615610bad57610bad610b36565b90059392505050565b60008160020b8360020b627fffff600082136000841383830485118282161615610be257610be2610b36565b627fffff196000851282811687830587121615610c0157610c01610b36565b60008712925085820587128484161615610c1d57610c1d610b36565b85850587128184161615610c3357610c33610b36565b505050929091029594505050505056fea264697066735822122054764e2883fc42bbaff64db593e67ca579bd364bc5ba6d774f0007f23cbf0b4f64736f6c634300080d0033";

export class TickMap__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TickMap> {
    return super.deploy(overrides || {}) as Promise<TickMap>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TickMap {
    return super.attach(address) as TickMap;
  }
  connect(signer: Signer): TickMap__factory {
    return super.connect(signer) as TickMap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TickMapInterface {
    return new utils.Interface(_abi) as TickMapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TickMap {
    return new Contract(address, _abi, signerOrProvider) as TickMap;
  }
}
