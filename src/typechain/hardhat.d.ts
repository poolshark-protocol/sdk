/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "CoverPoolEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverPoolEvents__factory>;
    getContractFactory(
      name: "CoverPoolFactoryEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverPoolFactoryEvents__factory>;
    getContractFactory(
      name: "CoverPoolManagerEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverPoolManagerEvents__factory>;
    getContractFactory(
      name: "CoverPoolModifiers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverPoolModifiers__factory>;
    getContractFactory(
      name: "CoverPoolFactoryStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverPoolFactoryStorage__factory>;
    getContractFactory(
      name: "CoverPoolStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverPoolStorage__factory>;
    getContractFactory(
      name: "CoverPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverPool__factory>;
    getContractFactory(
      name: "CoverPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverPoolFactory__factory>;
    getContractFactory(
      name: "IRangePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRangePool__factory>;
    getContractFactory(
      name: "IRangePoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRangePoolFactory__factory>;
    getContractFactory(
      name: "IRangePoolManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRangePoolManager__factory>;
    getContractFactory(
      name: "IUniswapV3Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Factory__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "ICoverPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICoverPool__factory>;
    getContractFactory(
      name: "ICoverPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICoverPoolFactory__factory>;
    getContractFactory(
      name: "ICoverPoolManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICoverPoolManager__factory>;
    getContractFactory(
      name: "ICurveMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICurveMath__factory>;
    getContractFactory(
      name: "IDyDxMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDyDxMath__factory>;
    getContractFactory(
      name: "ITickMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITickMath__factory>;
    getContractFactory(
      name: "ITwapSource",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITwapSource__factory>;
    getContractFactory(
      name: "Claims",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Claims__factory>;
    getContractFactory(
      name: "Deltas",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Deltas__factory>;
    getContractFactory(
      name: "EpochMap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EpochMap__factory>;
    getContractFactory(
      name: "Epochs",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Epochs__factory>;
    getContractFactory(
      name: "BurnCall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BurnCall__factory>;
    getContractFactory(
      name: "MintCall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintCall__factory>;
    getContractFactory(
      name: "QuoteCall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.QuoteCall__factory>;
    getContractFactory(
      name: "SwapCall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SwapCall__factory>;
    getContractFactory(
      name: "Positions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Positions__factory>;
    getContractFactory(
      name: "PoolsharkRangeSource",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolsharkRangeSource__factory>;
    getContractFactory(
      name: "UniswapV3Source",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3Source__factory>;
    getContractFactory(
      name: "TickMap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickMap__factory>;
    getContractFactory(
      name: "Ticks",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ticks__factory>;
    getContractFactory(
      name: "RangePoolFactoryMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RangePoolFactoryMock__factory>;
    getContractFactory(
      name: "RangePoolMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RangePoolMock__factory>;
    getContractFactory(
      name: "Token20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Token20__factory>;
    getContractFactory(
      name: "Token20Batcher",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Token20Batcher__factory>;
    getContractFactory(
      name: "UniswapV3FactoryMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3FactoryMock__factory>;
    getContractFactory(
      name: "UniswapV3PoolMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3PoolMock__factory>;
    getContractFactory(
      name: "CoverMiscErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverMiscErrors__factory>;
    getContractFactory(
      name: "CoverPoolErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverPoolErrors__factory>;
    getContractFactory(
      name: "CoverPoolFactoryErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverPoolFactoryErrors__factory>;
    getContractFactory(
      name: "CoverPositionErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverPositionErrors__factory>;
    getContractFactory(
      name: "CoverTicksErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverTicksErrors__factory>;
    getContractFactory(
      name: "CoverTransferErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverTransferErrors__factory>;
    getContractFactory(
      name: "CoverPoolManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoverPoolManager__factory>;

    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "CoverPoolEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverPoolEvents>;
    getContractAt(
      name: "CoverPoolFactoryEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverPoolFactoryEvents>;
    getContractAt(
      name: "CoverPoolManagerEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverPoolManagerEvents>;
    getContractAt(
      name: "CoverPoolModifiers",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverPoolModifiers>;
    getContractAt(
      name: "CoverPoolFactoryStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverPoolFactoryStorage>;
    getContractAt(
      name: "CoverPoolStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverPoolStorage>;
    getContractAt(
      name: "CoverPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverPool>;
    getContractAt(
      name: "CoverPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverPoolFactory>;
    getContractAt(
      name: "IRangePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRangePool>;
    getContractAt(
      name: "IRangePoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRangePoolFactory>;
    getContractAt(
      name: "IRangePoolManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRangePoolManager>;
    getContractAt(
      name: "IUniswapV3Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Factory>;
    getContractAt(
      name: "IUniswapV3Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Pool>;
    getContractAt(
      name: "ICoverPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICoverPool>;
    getContractAt(
      name: "ICoverPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICoverPoolFactory>;
    getContractAt(
      name: "ICoverPoolManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICoverPoolManager>;
    getContractAt(
      name: "ICurveMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICurveMath>;
    getContractAt(
      name: "IDyDxMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDyDxMath>;
    getContractAt(
      name: "ITickMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITickMath>;
    getContractAt(
      name: "ITwapSource",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITwapSource>;
    getContractAt(
      name: "Claims",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Claims>;
    getContractAt(
      name: "Deltas",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Deltas>;
    getContractAt(
      name: "EpochMap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EpochMap>;
    getContractAt(
      name: "Epochs",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Epochs>;
    getContractAt(
      name: "BurnCall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BurnCall>;
    getContractAt(
      name: "MintCall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintCall>;
    getContractAt(
      name: "QuoteCall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.QuoteCall>;
    getContractAt(
      name: "SwapCall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SwapCall>;
    getContractAt(
      name: "Positions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Positions>;
    getContractAt(
      name: "PoolsharkRangeSource",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolsharkRangeSource>;
    getContractAt(
      name: "UniswapV3Source",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV3Source>;
    getContractAt(
      name: "TickMap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TickMap>;
    getContractAt(
      name: "Ticks",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ticks>;
    getContractAt(
      name: "RangePoolFactoryMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RangePoolFactoryMock>;
    getContractAt(
      name: "RangePoolMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RangePoolMock>;
    getContractAt(
      name: "Token20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Token20>;
    getContractAt(
      name: "Token20Batcher",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Token20Batcher>;
    getContractAt(
      name: "UniswapV3FactoryMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV3FactoryMock>;
    getContractAt(
      name: "UniswapV3PoolMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV3PoolMock>;
    getContractAt(
      name: "CoverMiscErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverMiscErrors>;
    getContractAt(
      name: "CoverPoolErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverPoolErrors>;
    getContractAt(
      name: "CoverPoolFactoryErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverPoolFactoryErrors>;
    getContractAt(
      name: "CoverPositionErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverPositionErrors>;
    getContractAt(
      name: "CoverTicksErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverTicksErrors>;
    getContractAt(
      name: "CoverTransferErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverTransferErrors>;
    getContractAt(
      name: "CoverPoolManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoverPoolManager>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
